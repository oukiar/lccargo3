<%moment = require('cloud/moment')%><div class="sectionNewLabel" id="content">    <form method="POST" >        <div class="contNewLabel">            <div class="colwrapper">                <div class="cont-2">                    <div class="cont-5">                        <div class="colwrapper-2">                            <div class="cont-6">                                <div class="cont-7"><p class="para-2">                                    <span class="font-2">Receipt:</span></p></div>								</div>							</div>							<div class="colwrapper-3">								<div class="cont-8">									<input type="text" name="Receipt" id="Receipt" class="input" disabled>								</div>							</div>							<div class="colwrapper-4">								<div class="cont-9">									<div class="cont-10"><p class="para-3"><span class="font-3">Date:</span></p></div>								</div>							</div>							<div class="colwrapper-5">								<div class="cont-11">									<input type="text" name="ReceiptDate" id="ReceiptDate" class="input-2">								</div>							</div>							<div class="colwrapper-6">								<div class="cont-12">									<div class="cont-13"><p class="para-4"><span class="font-4">Agent:</span></p></div>								</div>							</div>							<div class="colwrapper-7">								<div class="cont-14">									<input type="text" name="Agent" id="Agent" class="input-3">								</div>							</div>						</div>						<div class="cont-15A">							<div class="cont-16">								<div class="colwrapper-8">									<div class="cont-17">										<div class="cont-18"><p class="para-5"><span class="font-5">Vendor:</span></p></div>									</div>								</div>								<div class="colwrapper-9">									<div class="cont-19">										<div class="cont-20"><p class="para-6"><span class="font-6">Consignee:</span></p></div>									</div>								</div>							</div>							<div class="cont-21">								<div class="colwrapper-10">									<div class="cont-22">										<!-- SHIPPER -->										<input type="text" name="Shipper" class="input-4" id='Shipper'>																			</div>								</div>								<div class="colwrapper-11">									<div class="cont-23">									<a id="openstoreinfo" href="#openStoreInfo"><i class="fa fa-eye"></i></a>									<input type="hidden" name="ShipperID" class="input-5" id='ShipperID'>									</div>								</div>								<div class="colwrapper-12">									<div class="cont-24">										<!-- consignee-->										<input type="text" name="Consignee" class="input-5" id='Consignee'>                                                                               <input type="hidden" name="ConsigneeID" class="input-5" id='ConsigneeID'>									</div>								</div>								<div class="colwrapper-13">									<div class="cont-25">										 <a id="openclientinfo" href="#openClientInfo"><i class="fa fa-eye"></i></a>                                         <!--<input type="button" id="btn_trytest" value="HERE">-->                                         <script>                                         $("#btn_trytest").click(function(){                                                /*alert("test");*/                                                                                                $("#Consignee").autocomplete({source: [{"label":"JUAN PEREZ","idx":"SSWtoeaaCm"},{"label":"JUANA","idx":"PfIZqjoWs0"}] });                                                $("#Consignee").trigger("keyup");                                                                                                                                            });                                         </script>									</div>								</div>							</div>						</div>						<div class="cont-26">							<div class="colwrapper-14">								<div class="cont-27">                                        <select name="Transport" id="Transport" class="input-4">                                          <option value="-">Select Transport</option>                                          <option value="UPS">UPS</option>                                          <option value="DHL">DHL</option>										  <option value="USPS">USPS</option>										  <option value="FEDEX">FEDEX</option>    								  </select>								</div>							</div>							<div class="colwrapper-15">								<div class="cont-28">                                    <select name="Warehouse" id="Warehouse" class="input-4">                                                                        </select>								</div>							</div>							<div class="colwrapper-16">								<div class="cont-29">                                    <div id='div_destination' style="display: none;">                                        <input type='text' class='input' id='CountryCustom'>                                        <img onclick='restoreDestinations();' src='/web/img/close.png' width=20 height=20>                                    </div>                                                                        <select name="Country" id="Country" class="input-5">                                        <option value="Pending destination">Select destination</option>                                        <option value="Custom">Custom</option>                                        <!--                                      <option value="-">-</option>                                      <option value="Antigua y Barbuda">Antigua y Barbuda</option>                                      <option value="Argentina">Argentina</option>                                      <option value="Aruba">Aruba</option>                                      <option value="Bahamas">Bahamas</option>                                      <option value="Barbado">Barbados</option>                                      <option value="Belize">Belize</option>                                      <option value="Bolivia">Bolivia</option>                                      <option value="Bonaire">Bonaire</option>                                      <option value="Brasil">Brasil</option>                                      <option value="Chile">Chile</option>                                      <option value="China">China</option>                                      <option value="Colombia">Colombia</option>                                      <option value="Costa Rica">Costa Rica</option>                                      <option value="Curacao">Curacao</option>                                      <option value="Dominica">Dominica</option>                                      <option value="Ecuador">Ecuador</option>                                      <option value="El Salvador">El Salvador</option>                                      <option value="Jamaica">Jamaica</option>                                      <option value="Espana">España</option>                                      <option value="Granada">Granada</option>                                      <option value="Guatemala">Guatemala</option>                                      <option value="Guayana Francesa">Guayana Francesa</option>                                      <option value="Guyana">Guyana</option>                                      <option value="Haiti">Haiti</option>                                      <option value="Honduras">Honduras</option>                                      <option value="Nicaragua">Nicaragua</option>                                      <option value="Panama">Panamá</option>                                      <option value="Paraguay">Paraguay</option>                                      <option value="Peru">Peru</option>                                      <option value="Puerto Rico">Puerto Rico</option>                                      <option value="Republica Dominicana">Republica Dominicana</option>                                      <option value="Saba">Saba</option>                                      <option value="Santa Lucia">Santa Lucia</option>                                      <option value="Sint Eustatius">Sint Eustatius</option>                                      <option value="St. Marteen">St. Marteen</option>                                      <option value="St. Vicent">St. Vicent</option>                                      <option value="Suriname">Suriname</option>                                      <option value="Trinidad">Trinidad</option>                                      <option value="U.S.A">U.S.A</option>                                      <option value="Venezuela">Venezuela</option>                                        -->                                    </select>			                        </div>			                        </div>			                        </div>			 <div class="cont-30">			 <div class="colwrapper-17">			 <div class="cont-31">			 <div class="cont-32">			 <div class="colwrapper-18">			 <div class="cont-33">		     <div class="cont-34"><p class="para-7"><span class="font-7">Pieces:</span></p></div>		     </div>		     </div>		<div class="colwrapper-19">		<div class="cont-35">		<input type="text" name="Boxes" id="Boxes" class="input-9" disabled>        </div>        </div> <div class="colwrapper-20"> <div class="cont-36"> <div class="cont-37"><p class="para-8"><span class="font-8">Extra Cost:</span></p></div> </div> </div>						  <div class="colwrapper-21">					      <div class="cont-38">					      <input type="text" name="ExtraCost" id="ExtraCost" class="input-10">					      </div>					      </div>					  <div class="colwrapper-22">					  <div class="cont-39">				      <div class="cont-40"><p class="para-9"><span class="font-9">$</span></p></div>				      </div>				      </div>				      </div>				<div class="cont-41">				<div class="colwrapper-23">				<div class="cont-42">				<div class="cont-43"><p class="para-10"><span class="font-10">Weight:</span></p></div>		        </div>		        </div>		 <div class="colwrapper-24">		 <div class="cont-44">	     <input type="text" name="Weight" id="Weight" class="input-11" disabled>	     </div>	     </div>	<div class="colwrapper-25">	<div class="cont-45">	<div class="cont-46"><p class="para-11"><span class="font-11">Lb</span></p></div>	</div>	</div>	     <div class="colwrapper-26">         <div class="cont-47">         <div class="cont-48"><p class="para-12"><span class="font-12">Invoice:</span></p></div>         </div>         </div><div class="colwrapper-27"><div class="cont-49"><input type="text" name="Invoice" id="Invoice" class="input-12"></div></div></div>          <div class="cont-50">          <div class="colwrapper-28">          <div class="cont-51">          <div class="cont-52"><p class="para-13"><span class="font-13">Volume:</span></p></div>		  </div>		  </div>				<div class="colwrapper-29">			    <div class="cont-53">			<input type="text" name="Volume" id="Volume" class="input-15" disabled>			    </div>				</div>	<div class="colwrapper-30">	<div class="cont-54">	<div class="cont-55"><p class="para-14"><span class="font-14">Cf</span></p></div>    </div>    </div>			  <div class="colwrapper-31">			  <div class="cont-56">			  <div class="cont-57"><p class="para-15"><span class="font-15">Value:</span></p></div>			  </div>			  </div>	 <div class="colwrapper-32">	 <div class="cont-58">	 <input type="text" name="Value" id="Value" class="input-14">	 </div>	 </div>			  <div class="colwrapper-33">			  <div class="cont-59">			  <div class="cont-60"><p class="para-16"><span class="font-16">$</span></p></div>			  </div>			  </div>			  </div>	 <div class="cont-61">	 <div class="colwrapper-34">	 <div class="cont-62">	 <div class="cont-63"><p class="para-17"><span class="font-17">Weight-Vol:</span></p></div>     </div>	 </div>		<div class="colwrapper-35">		<div class="cont-64">		 <input type="text" name="WeightVol" id="WeightVol" class="input-13" disabled> 		</div>		</div>		      <div class="colwrapper-36">		      <div class="cont-65">		      <div class="cont-66" style="position:absolute; width:233px; top:5px;"><p class="para-18"><span class="font-18">                <select id="weight_vol_type">                  <option value="Dom">Lb - Dom</option>                  <option value="Intl">Lb - Intl</option>                </select>                </span></p></div>		      </div>		      </div>		</div>		</div>				<div class="cont-67">		<div class="colwrapper-37">		<div class="cont-68">		<div class="cont-69"><p class="para-19"><span class="font-19">Zone:</span></p></div>	    </div>	    </div>		<div class="colwrapper-38">	<div class="cont-70">	<input type="text" name="Zone" id="Zone" class="input-16">    </div>	</div>	</div>	</div>			<!--Beginning of dotted fieldset for the add boxes section-->	<div class="colwrapper-39">	<fieldset class="cont-71">			   <!--START TABLE HEADER OF div class="cont-72--><div class="cont-72">	   <div class="colwrapper-40">	<ul class="menu-horizontal-dropdown menu" id="menu-1">	<li class="menu-item">     <div class="menu-content">        <div class="cont-73"></div>	<div class="cont-74">	    <div class="cont-75"><p class="para-20"><span class="font-20">Length</span></p></div>	</div>	</div>	</li>	</ul>	</div>										<div class="colwrapper-41">					<ul class="menu-horizontal-dropdown menu-2" id="menu-2">					<li class="menu-item-2">					<div class="menu-content">				    <div class="cont-76"></div>					<div class="cont-77">					<div class="cont-78"><p class="para-21"><span class="font-21">Width</span></p></div>			        </div>			        </div>			        </li>			        </ul>			        </div>								 <div class="colwrapper-42">			 <ul class="menu-horizontal-dropdown menu-3" id="menu-3">		     <li class="menu-item-3">	    	 <div class="menu-content">			 <div class="cont-79"></div>			 <div class="cont-80">		     <div class="cont-81"><p class="para-22"><span class="font-22">Height</span></p></div>		     </div>		     </div>		     </li>		     </ul>		     </div>			 		<div class="colwrapper-43">		<ul class="menu-horizontal-dropdown menu-4" id="menu-4">		<li class="menu-item-4">	    <div class="menu-content">	    <div class="cont-82"></div>		<div class="cont-83">		<div class="cont-84"><p class="para-23"><span class="font-24">Boxes</span></p></div>		</div>		</div>												    </li>		</ul>		</div>				  				  <div class="colwrapper-44">				  <ul class="menu-horizontal-dropdown menu-5" id="menu-5">			      <li class="menu-item-5">	              <div class="menu-content">			      <div class="cont-85"></div>				  <div class="cont-86">				  <div class="cont-87"><p class="para-24"><span class="font-23">Weight</span></p></div>				  </div>				  </div>				  </li>				  </ul>				  </div>				        <!--END OF div class="cont-72" TABLE HEADER--></div>                                                      		  <!--START OF TABLE FOR BOXES-->                            <div id="dyntable" class="cont-106">          <div class="cont-106">			  			            <div class="colwrapper-60">          <div class="cont-107">          <input type="text" name="Length-1" id="Length-1" class="input-32">          </div>          </div>               			  <div class="colwrapper-61">              <div class="cont-108">              <input type="text" name="Width-1" id="Width-1" class="input-33">              </div>              </div>                                       				 <div class="colwrapper-62">                 <div class="cont-109">                 <input type="text" name="Height-1" id="Height-1" class="input-34">                 </div>                 </div>                       			         <div class="colwrapper-63">                     <div class="cont-110">					 <input type="text" name="Boxes-1" id="Boxes-1" class="input-36">                     </div>                     </div>                                        				        <div class="colwrapper-64">                        <div class="cont-111">                         <input type="text" name="Weight-1" id="Weight-1" class="input-35">                        </div>                        </div>	  						                     </div>			                <!--END OF TABLE FOR BOXES--></div>				</fieldset>	<img src="web/img/icons/newtab.png" id="btn_addbox" alt="Add Box" width="28" height="28" class="lower-right-button" >						    </div>		<!--END OF DOTED BOXES SECTION-->									</div>							   <div class="cont-118">		       <div class="colwrapper-70">	<div class="cont-119">	<div class="cont-120"><p class="para-25"><span class="font-25">Content:</span></p></div>	</div>	</div>		<div class="colwrapper-71">		<div class="cont-121">		<div class="cont-122"><p class="para-26"><span class="font-26">General Notes:</span></p></div>		</div>		</div>		    <div class="colwrapper-72">			<div class="cont-123">			<div class="cont-124"><p class="para-27"><span class="font-27">Details:</span></p></div>			</div>			</div>		</div>									 <div class="cont-125">									<div class="colwrapper-73">		<div class="cont-126">		<textarea name="Content" id="Content" class="input-42"></textarea>		</div>	    </div>			<div class="colwrapper-74">			<div class="cont-127">		    <textarea name="GeneralNotes" id="GeneralNotes" class="input-43"></textarea>			</div>			</div>				<div class="colwrapper-75">				<div class="cont-128">				<textarea name="InternalNotes" id="InternalNotes" class="input-44" disabled></textarea>                				</div>							</div>			</div>             </div>			 </div>                                				<div class="colwrapper-76">				 <div class="cont-129" >	                        <a href="#openModalPrint">						<button id="btn_save" type='button' style="border:none; background-color:transparent; width:64px; height:64px;"><img src="web/img/icons/save.png" alt="" class="img" ></button>                    </a>                 </div>																		   </div>			   </div>               </form></div><!--MODAL PARA MOSTAR INFORMACION DE STORE --><div id="openStoreInfo" class="modalDialog">  <div>        <a href="#close" title="Close" class="closeB">X</a>        <h3>Store information</h3>                <br>                <table class="table table-bordered" id="blueRow">            <tr>                <td><b>Name:</b></td>                <td id="tdName" contenteditable='true'></td>            </tr>            <tr>                <td><b>Account:</b></td>                <td id="tdAccount" contenteditable='true'></td>            </tr>            <tr>                <td><b>Address:</b></td>                <td id="tdAddress" contenteditable='true'></td>            </tr>            <tr>                <td><b>City:</b></td>                <td id="tdCity" contenteditable='true'></td>            </tr>            <tr>                <td><b>State:</b></td>                <td id="tdState" contenteditable='true'></td>            </tr>            <tr>                <td><b>Country:</b></td>                <td id="tdCountry" contenteditable='true'></td>            </tr>            <tr>                <td><b>Zip:</b></td>                <td id="tdZip" contenteditable='true'></td>            </tr>            <tr>                <td><b>Telephone:</b></td>                <td id="tdTel" contenteditable='true'></td>            </tr>            <tr>                <td><b>Cellphone:</b></td>                <td id="tdCel" contenteditable='true'></td>            </tr>            <tr>                <td><b>Email:</b></td>                <td id="tdEmail" contenteditable='true'></td>            </tr>            <tr>                <td><b>Website:</b></td>                <td id="tdWebsite" contenteditable='true'></td>            </tr>            <tr>                <td><b>Contact:</b></td>                <td id="tdContact" contenteditable='true'></td>            </tr>        </table>        		<a href="#close" class="pure-button pure-button-primary" style="background:#E08566;">Cancel</a>		<a href="#close" id="btn_saveTable" class="pure-button pure-button-primary" onclick="updateStoreTable();">Save</a>		    </div></div><!--MODAL PARA MOSTAR INFORMACION DE CLIENT --><div id="openClientInfo" class="modalDialog">        <a href="#close" title="Close" class="close">X</a>        <div>            <a href="#close" title="Close" class="closeB">X</a>            <h3>Consignee Information</h3>                        <br>                        <table class="table table-bordered" id="blueRow">                <tr>                    <td><b>Name:</b></td><td id="tdCName" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Account #</b>                    </td>                    <td id="tdCAccount" contenteditable='true'>                    </td>                </tr>                <tr>                    <td><b>Company Name:</b></td><td id="tdCCompanyName" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Address</b>                    </td>                    <td id="tdCAddress" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>City</b>                    </td>                    <td id="tdCCity" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>State:</b>                    </td>                    <td id="tdCState" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Country:</b>                    </td>                    <td id="tdCCountry" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Zip:</b>                    </td>                    <td id="tdCZip" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Telephone:</b>                    </td>                    <td id="tdCTel" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Cellphone:</b>                    </td>                    <td id="tdCCel" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>ID:</b>                    </td>                    <td id="tdCID" contenteditable='true'>                    </td>                </tr>                <tr>                    <td>                        <b>Email:</b>                    </td>                    <td id="tdCEmail" contenteditable='true'>                    </td>                </tr>                            </table>                        <a  href="#close" id="cancelConsignee" class="pure-button pure-button-primary" style="background:#E08566;">Cancel</a>            <a href="#close" id="saveConsignee" class="pure-button pure-button-primary" onclick="updateClientTable();">Save</a>        </div></div>    <img src="web/img/tsa-security-theater-300x300.jpg" id="img_sec" style="display:none;">    <div id="myqrcode"></div><script>    $("#openclientinfo").click(function(){                        if(consigneeID == -1)            {                alert("You must select a client consignee");                return false;            }                        var query = new Parse.Query("Clients");            query.get(consigneeID, {success: function(client){                                        $("#tdCName").html(tryget(client.get("Name") ));                    $("#tdCCompanyName").html(tryget(client.get("CompanyName") ));                    $("#tdCAddress").html(tryget(client.get("Address")));                    $("#tdCAccount").html(tryget(client.get("AccountID")));                    $("#tdCCity").html(tryget(client.get("City")));                    $("#tdCState").html(tryget(client.get("State")));                    $("#tdCCountry").html(tryget(client.get("Country")));                    $("#tdCZip").html(tryget(client.get("Zip")) );                    $("#tdCCel").html(tryget(client.get("Cellphone")) );                    $("#tdCEmail").html(tryget(client.get("Email")) );                    $("#tdCTel").html(tryget(client.get("Telephone")));                    $("#tdCID").html(tryget(client.get("ID1")));                                    }});                    });            $("#openstoreinfo").click(function(){                        if(shipperID == -1)            {                alert("You must select a store shipper");                return false;            }                        var query = new Parse.Query("Agencies");            query.get(shipperID, {success: function(agency){                                        $("#tdName").html(tryget(agency.get("Name") ));                    $("#tdCompanyName").html(tryget(agency.get("CompanyName") ));                    $("#tdAddress").html(tryget(agency.get("Address")));                    $("#tdAccount").html(tryget(agency.get("AccountID")));                    $("#tdCity").html(tryget(agency.get("City")));                    $("#tdState").html(tryget(agency.get("State")));                    $("#tdCountry").html(tryget(agency.get("Country")));                    $("#tdZip").html(tryget(agency.get("Zip")) );                    $("#tdCel").html(tryget(agency.get("Cel")) );                    $("#tdEmail").html(tryget(agency.get("Email")) );                    $("#tdTel").html(tryget(agency.get("Telephone")));                    $("#tdContact").html(tryget(agency.get("Contact")));                    $("#tdWebsite").html(tryget(agency.get("Website")));                                    }});                    });    function updateStoreTable(){                if(shipperID != -1)        {            var Agencies = Parse.Object.extend("Agencies");            var agency = new Agencies();            agency.id = shipperID;                                    agency.set("Name", $("#tdName").text());            agency.set("CompanyName", $("#tdCompanyName").text());            agency.set("Address", $("#tdAddress").text());            agency.set("Account", $("#tdAccount").text());            agency.set("City", $("#tdCity").text());            agency.set("State", $("#tdState").text());            agency.set("Country", $("#tdCountry").text());            agency.set("Zip", $("#tdZip").text());            agency.set("Cel", $("#tdCel").text());            agency.set("Email", $("#tdEmail").text());            agency.set("Telephone", $("#tdTel").text());            agency.set("Contact", $("#tdContact").text());            agency.set("Website", $("#tdWebsite").text());                                    agency.save(null, {success: function(){                        update_table();                    }});                    }        else alert("Shipper not selected");            }        function updateClientTable(){                        if(consigneeID != -1)            {                            var Clients = Parse.Object.extend("Clients");                var client = new Clients();                client.id = consigneeID;                                client.set("Name", $("#tdCName").text() );                client.set("CompanyName", $("#tdCCompanyName").text() );                client.set("Address", $("#tdCAddress").text() );                                client.set("City", $("#tdCCity").text() );                client.set("State", $("#tdCState").text() );                client.set("Country", $("#tdCCountry").text() );                client.set("Zip", $("#tdCZip").text() );                client.set("Cellphone", $("#tdCCel").text() );                                client.set("ID1", $("#tdCID").text() );                client.set("Telephone", $("#tdCTel").text() );                client.set("Email", $("#tdCEmail").text() );                                client.save(null, {success: function(){                    }});                            }            else alert("Consignee not selected");                    }    function storeTableEdit(){        $("#tdName").attr('contentEditable', true);        $("#tdCountry").attr('contentEditable',true);        $("#tdEmail").attr('contentEditable',true);        $("#tdTel").attr('contentEditable',true);        $("#tdAddress").attr('contentEditable',true);        $("#tdWebsite").attr('contentEditable',true);        $("#btn_edit").hide();        $("#btn_cancel").show();        $("#btn_saveTable").show();    }    function cancelEdit(){        $("#tdName").attr('contentEditable', false);        $("#tdCountry").attr('contentEditable',false);        $("#tdEmail").attr('contentEditable',false);        $("#tdTel").attr('contentEditable',false);        $("#tdAddress").attr('contentEditable',false);        $("#tdWebsite").attr('contentEditable',false);        $("#btn_edit").show();        $("#btn_cancel").hide();        $("#btn_saveTable").hide();        location.reload();    }    function clientTableEdit(){        $("#tdCName").attr('contentEditable', true);		$("#tdCAccount").attr('contentEditable', true);        $("#tdCCountry").attr('contentEditable',true);        $("#tdCEmail").attr('contentEditable',true);        $("#tdCTel").attr('contentEditable',true);        $("#tdCID").attr('contentEditable',true);        $("#tdCDest").attr('contentEditable',true);        $("#tdCStatus").attr('contentEditable',true);        $("#btn_Cli_edit").hide();        $("#btn_Cli_cancel").show();        $("#btn_Cli_saveTable").show();    }    function cancelClientEdit(){        $("#tdCName").attr('contentEditable', false);	    $("#tdCAccount").attr('contentEditable', false);        $("#tdCCountry").attr('contentEditable',false);        $("#tdCEmail").attr('contentEditable',false);        $("#tdCTel").attr('contentEditable',false);        $("#tdCID").attr('contentEditable',false);        $("#tdCDest").attr('contentEditable',false);        $("#tdCStatus").attr('contentEditable',false);        $("#btn_Cli_edit").show();        $("#btn_Cli_cancel").hide();        $("#btn_Cli_saveTable").hide();        /*location.reload();*/    }    /* CHANGE OF WEIGHTVOL TYPE */    $("#weight_vol_type").change(function(){                sumboxes();            });        /* DINAMIC TABLE ORIGINAL HTML */    var dyntable_original = $("#dyntable").html();    focus_setup();    function focus_setup()    {        /* FOCUS OUT EN INPUTS DE BOXES */        $( "#Length-1" ).focusout(function(){                sumboxes();            });                    $( "#Width-1" ).focusout(function(){                sumboxes();            });        $( "#Height-1" ).focusout(function(){                sumboxes();            });                    $( "#Boxes-1" ).focusout(function(){                sumboxes();            });                    $( "#Weight-1" ).focusout(function(){                sumboxes();            });                }            function sumboxes()    {        var totalvol = 0;        var totalvolweight = 0;        var totalweight = 0;        var totalboxes = 0;            for(i=1; i <= totalrows; i++)        {                                /* CHECK IF ALL FIELDS HAVE VALUE*/            if( $( "#Length-" + i.toString() ).val() != "" &&                            $( "#Width-" + i.toString() ).val() != "" &&                            $( "#Height-" + i.toString() ).val() != ""                        )            {                        /* VOLUME CALCULATION */                var vol = (parseFloat($( "#Length-" + i.toString() ).val()) *                             parseFloat($( "#Width-" + i.toString() ).val()) *                             parseFloat($( "#Height-" + i.toString() ).val())) / 1728;                            totalvol += vol;                                                                var volweight; /* TEMPORAL VARIABLE */                                /* NEW: WEIGHT VOLUME CALCULATION */                if($("#weight_vol_type").val() == "Dom")                {                    volweight = (parseFloat($( "#Length-" + i.toString() ).val()) *                                 parseFloat($( "#Width-" + i.toString() ).val()) *                                 parseFloat($( "#Height-" + i.toString() ).val())) / 166;                                    totalvolweight += volweight;                }                else                {                    volweight = (parseFloat($( "#Length-" + i.toString() ).val()) *                                 parseFloat($( "#Width-" + i.toString() ).val()) *                                 parseFloat($( "#Height-" + i.toString() ).val())) / 139;                                    totalvolweight += volweight;                }            }                        if( $( "#Weight-" + i.toString() ).val() != "")                totalweight += parseFloat($( "#Weight-" + i.toString() ).val());                            if( $( "#Boxes-" + i.toString() ).val() != "")                totalboxes += parseFloat($( "#Boxes-" + i.toString() ).val());        }                $("#Volume").val( (totalvol*totalboxes).toFixed(2) );        $("#Weight").val(totalweight);        $("#Boxes").val(totalboxes);              $("#WeightVol").val( totalvolweight );            }    $("#ReceiptDate").val(moment( new Date() ).format("MM[/]DD[/]YYYY") );    $("#ReceiptDate").datepicker();    $("#btn_save").click(    function()    {           if(typeof(wareEditing) === "undefined" )        {            if(shipperID == -1 || consigneeID == -1)            {                alert("You must select shipper and consignee from the result list");                return false;            }            else if(/*$("#Length-1").val() == "" ||                $("#Width-1").val() == "" ||                $("#Height-1").val() == "" ||*/                $("#Boxes-1").val() == "" ||                $("#Weight-1").val() == "" )            {                alert("Almost one box must be specified");                return false;            }            else            {                /* WORKING ICON ... please replace for pretty new dialogs */                $("#modalmessage").replaceWith("<div id='modalmessage'><img src='/web/img/icons/loader_grey.gif'></div>");                                sumboxes();                                /* GET THE COUNT FOR THIS NEW RECEIPT NUMER */                var last_receipt_num = 1;                var query = new Parse.Query("Receipts");                                    query.descending('ReceiptNum');                                query.first().then(                        function(object)                        {                            if(typeof object != "undefined")                                last_receipt_num = object.get("ReceiptNum")+1;                            else last_receipt_num = 1;                                                                    /* NEW CODE FOR INPUT A NEW RECEIPT */                            var Receipts = Parse.Object.extend("Receipts");                            var receipt = new Receipts();                                                        receipt.set("ReceiptNum", last_receipt_num);                            receipt.set("ReceiptBy", {__type: "Pointer", className: "User", objectId: user.id});                            receipt.set("Hour", moment().format("h:mm:ss a") );                                                        d = new Date();                                                        /*var newYork    = moment().tz('America/Los_Angeles');                            var newdate = newYork.clone().tz("America/Los_Angeles");                            alert(newdate);                            */                                                        receiptdate = new Date($("#ReceiptDate").val());                            /*alert(receiptdate.toUTCString() );*/                                                                                    /*                            receiptdate = new Date($("#ReceiptDate").val() );                            receiptdate.setHours(d.getHours(), d.getMinutes() );                            */                                                        /* ERROR DE PARSE QUE GUARDA SIEMPRE UN DIA ADELANTE */                            /*receiptdate = new Date(moment(receiptdate).subtract('hours', 7));*/                                                        /* SHIPPER: The shipper can be a client or a store, check here and save in the correct field */                            if(shipperType == "Store")                                receipt.set("Shipper", {__type: "Pointer", className: "Agencies", objectId: shipperID});                            else                                receipt.set("ShipperConsignee", {__type: "Pointer", className: "Clients", objectId: shipperID});                                                            receipt.set("Status", "Received");                            receipt.set("Usr", user);                            receipt.set("ReceiptDate", moment(receiptdate).format("YYYYMMDD") );                            receipt.set("Agent", $("#Agent").val());                            receipt.set("Consignee", {__type: "Pointer", className: "Clients", objectId: consigneeID});                            receipt.set("Transport", $("#Transport").val());                            receipt.set("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#Warehouse").val()});                            if($("#Country").val() == "Custom")                                receipt.set("Destination", $("#CountryCustom").val());                            else                                receipt.set("Destination", $("#Country").val());                            receipt.set("Weight", $("#Weight").val());                            receipt.set("WeightVol", $("#WeightVol").val());                            receipt.set("Volume", $("#Volume").val());                            receipt.set("Value", $("#Value").val());                            receipt.set("ExtraCost", $("#ExtraCost").val());                            receipt.set("Invoice", $("#Invoice").val());                            receipt.set("Zone", $("#Zone").val());                            receipt.set("Content", $("#Content").val());                            receipt.set("GeneralNotes", $("#GeneralNotes").val());                            receipt.set("InternalNotes", $("#InternalNotes").val());                            receipt.set("Company", {__type: "Pointer", className: "Companies", objectId: "<%= user.get("Company").id %>"});                            receipt.set("PackedBoxes", 0);                            receipt.set("Shipment", "Pending");                            receipt.set("Log", ["Received by " + user.get("username").split("@")[0] + " at " + moment().format("MM/DD/YYYY h:mm:ss a") ]);                                                        /* FIELDS COPY FOR ORDER TABLE */                            receipt.set("ConsigneeName", $("#Consignee").val() );                            receipt.set("ShipperName", $("#Shipper").val() );                                                        receipt.save().then(function(object){                                                                /* SAVE BOXES */                                    var c=1;                                    var boxes = [];                                                                        while(typeof $("#" + "Length-" + c.toString() ).val() != "undefined")                                    {                                        if($("#" + "Weight-" + c.toString() ).val() == ""||                                            $("#" + "Boxes-" + c.toString() ).val() == "")                                            {                                                c += 1;                                                continue;                                            }                                                                                    for(i=0; i < parseInt($("#" + "Boxes-" + c.toString() ).val() ); i++)                                        {                                                                                var Boxes = Parse.Object.extend("Boxes");                                            var box = new Boxes();                                                                                        box.set('Status', 'Received');                                            box.set('Length', $("#" + "Length-" + c.toString() ).val());                                            box.set('Width', $("#" + "Width-" + c.toString() ).val());                                            box.set('Height', $("#" + "Height-" + c.toString() ).val());                                            box.set('Weight', $("#" + "Weight-" + c.toString() ).val());                                            box.set('Boxes', $("#" + "Boxes-" + c.toString() ).val());                                            box.set('Receipt', {__type: "Pointer", className: "Receipts", objectId:object.id });                                                                                        /*box.save();*/                                                                                        boxes.push(box);                                        }                                                                                c += 1;                                    }                                                                        /* SAVE THE BOX INDEX */                                    for(i=0; i<boxes.length; i++)                                    {                                        boxes[i].set('Num', (i+1).toString() + "/" + boxes.length.toString() );                                        boxes[i].set('BoxNum', i );                                        /*boxes[i].save();*/                                    }                                                                        /* SAVE THE TOTAL BOXES ON THE RECEIPT */                                    object.set("TotalBoxes", boxes.length);                                    object.save({success:function(object){                                                                                        /* SAVE THE BOXES ALL TOGETHER */                                            Parse.Object.saveAll(boxes,{success:function(){                                            		/* GET EMAIL TEMPLATE */                                            		$.post("/get_receipt_template", {receiptId:receipt.id, companyId:user.get("Company").id},                                            			function(result){															if(typeof(object.get("Shipper")) != "undefined")															{																shipper = object.get("Shipper").get("Name");															}															else															{																shipper = object.get("ShipperConsignee").get("Name");															}															/*															emailparams = {																			"text": result,																			"shipper": shipper,																			"subject": "Receipt #" + object.get("ReceiptNum"),																			"from_email": "cargoparse@notifications.com",																			"from_name":$("#Shipper").val(),																			"to_email": "natsynapses@gmail.com",																			"to_name":$("#Consignee").val()																		};															Parse.Cloud.run('sendMail', emailparams, {																success:																	function(result)																	{                                                                    																	},																error:																	function()																	{																		alert("Email was not sent");																	}																});*/                                                                                                                           /* -------------------------------- */                                                            /* EMAIL PARAMETERS ... REAL CLIENT */                                                            															emailparams = {																			"text": result,																			"shipper": shipper,																			"subject": "Receipt #" + object.get("ReceiptNum"),																			"from_email": "info@lccargoxpress.com",																			"from_name":shipper,																			"to_email": consigneeEmail,																			"to_name":$("#Consignee").val()																		};															Parse.Cloud.run('sendMail', emailparams, {																success:																	function(result)																	{																		/*alert("Result: " + result + " for " + consigneeEmail);*/																	},																error:																	function()																	{																		alert("Email was not sent");																	}																});                                                                                                            			});                                                                                                        /* SET THE SAVED MESSAGE */                                                    InsertForm({                                                                params: JSON.stringify(object),                                                                document: "Staff/Warehouses/newlabel_partitions/result",                                                                itemid: "modalmessage"                                                        });                                                                                                         /* RESET VARS */                                                    shipperID = -1;                                                     consigneeID = -1;                                                    totalrows = 1;                                                    /* RESET CONTROLS */                                                                                                        $("#Agent").val("");                                                    $("#Shipper").val("");                                                    $("#Consignee").val("");                                                    $("#Transport").val("");                                                    $("#Country").val("");                                                                                                                                                            $("#Country")[0].options.length = 0;                                                    $("#Country")[0].options[$("#Country")[0].options.length] = new Option("Pending destination", "Select destination");                                                    $("#Country")[0].options[$("#Country")[0].options.length] = new Option("Custom", "Custom");                                                    $("#CountryCustom").val("");                                                    $("#CountryCustom").val("");                                                                                                                                                            $("#Weight").val("");                                                    $("#Volume").val("");                                                    $("#Value").val("");                                                    $("#Zone").val("");                                                    $("#Content").val("");                                                    $("#GeneralNotes").val("");                                                    $("#InternalNotes").val("");                                                    $("#Boxes").val("");                                                       $("#ExtraCost").val("");                                                       $("#Invoice").val("");                                                                                                            /* RESET THE NEW CONSIGNEE FORM */                                                    $("#clientName").val("");                                                    $("#clientEmail").val("");                                                    $("#clientAddress").val("");                                                    $("#clientTelephone").val("");                                                    $("#clientAccountID").val("");                                                    $("#clientID").val("");                                                    $("#clientCellphone").val("");                                                                                                        /* RESET THE NEW STORE SHIPPER FORM */                                                    $("#storeName").val("");                                                    $("#storeEmail").val("");                                                    $("#storeAddress").val("");                                                    $("#storeTelephone").val("");                                                    $("#storeAccountID").val("");                                                    $("#storeID").val("");                                                    $("#storeTelephone2").val("");                                                    $("#storeEmail").val("");                                                    $("#storeWebsite").val("");                                                                                                                                                            $("#clientNameInfo").html("");                                                    $("#clientCountryInfo").html("");                                                    $("#clientEmailInfo").html("");                                                                                                        $("#storeNameInfo").html("");                                                    $("#storeCountryInfo").html("");                                                    $("#storeEmailInfo").html("");                                                                                                        $("#dyntable").html(dyntable_original);                                                                                                        $("#lst_consignees").html("<ul></ul>");                                                                                                        focus_setup();                                                                                            }});    /* END OF BOXES SAVE saveAll */                                                                            }});                                                                        }); /* END OF RECEIPT SAVE */                        }                    );/* END OF QUERY FOR LAST RECEIPTNUM */                            }        }        else    /* UPDATE THE LABEL */        {            /* SAVE RECEIPT */            var Receipts = Parse.Object.extend("Receipts");            var receipt = new Receipts();            receipt.id = wareEditing;                        receipt.set("ReceiptBy", {__type: "Pointer", className: "User", objectId: user.id});            receipt.set("ReceiptHour", new Date());                                    receipt.set("Status", "Received");            receipt.set("Usr", user);            receipt.set("ReceiptDate", moment(new Date($("#ReceiptDate").val() )).format("YYYYMMDD") );            receipt.set("Agent", $("#Agent").val());            receipt.set("Shipper", {__type: "Pointer", className: "Agencies", objectId: shipperID});            receipt.set("Consignee", {__type: "Pointer", className: "Clients", objectId: consigneeID});            receipt.set("Transport", $("#Transport").val());            receipt.set("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#Warehouse").val()});            if($("#Country").val() == "Custom")                receipt.set("Destination", $("#CountryCustom").val());            else                receipt.set("Destination", $("#Country").val());                            receipt.set("Weight", $("#Weight").val());            receipt.set("WeightVol", $("#WeightVol").val());            receipt.set("Volume", $("#Volume").val());            receipt.set("Value", $("#Value").val());            receipt.set("ExtraCost", $("#ExtraCost").val());            receipt.set("Invoice", $("#Invoice").val());            receipt.set("Zone", $("#Zone").val());            receipt.set("Content", $("#Content").val());            receipt.set("GeneralNotes", $("#GeneralNotes").val());            receipt.set("InternalNotes", $("#InternalNotes").val());            receipt.set("Company", {__type: "Pointer", className: "Companies", objectId: "<%= user.get("Company").id %>"});                        receipt.add("Log", ["Edited by " + user.get("username").split("@")[0] + " at " + moment().format("MM/DD/YYYY h:mm:ss a") ]);                                                receipt.save({success:function(object){                                /* REMOVE PREVIOUS BOXES, FOR AVOID INTEGRITY PROBLEMS */                    var q = new Parse.Query("Boxes");                    q.equalTo("Receipt", {__type: "Pointer", className: "Receipts", objectId: wareEditing});                                        q.find({success:function(results){                                                Parse.Object.destroyAll(results).then(function(){                                /* SAVE BOXES */                                var c=1;                                var boxes = [];                                                                while(typeof $("#" + "Length-" + c.toString() ).val() != "undefined")                                {                                    if($("#" + "Weight-" + c.toString() ).val() == ""||                                        $("#" + "Boxes-" + c.toString() ).val() == "")                                        {                                            c += 1;                                            continue;                                        }                                                                            for(i=0; i < parseInt($("#" + "Boxes-" + c.toString() ).val() ); i++)                                    {                                                                        var Boxes = Parse.Object.extend("Boxes");                                        var box = new Boxes();                                                                                box.set('Status', 'Received');                                        box.set('Length', $("#" + "Length-" + c.toString() ).val());                                        box.set('Width', $("#" + "Width-" + c.toString() ).val());                                        box.set('Height', $("#" + "Height-" + c.toString() ).val());                                        box.set('Weight', $("#" + "Weight-" + c.toString() ).val());                                        box.set('Boxes', $("#" + "Boxes-" + c.toString() ).val());                                        box.set('Receipt', {__type: "Pointer", className: "Receipts", objectId:object.id });                                                                                /*box.save();*/                                                                                boxes.push(box);                                    }                                                                        c += 1;                                }                                                                /* SAVE THE BOX INDEX */                                for(i=0; i<boxes.length; i++)                                {                                    boxes[i].set('Num', (i+1).toString() + "/" + boxes.length.toString() );                                    boxes[i].set('BoxNum', i );                                    /*boxes[i].save();*/                                }                                                                /* SAVE THE TOTAL BOXES ON THE RECEIPT */                                object.set("TotalBoxes", boxes.length);                                object.save({success:function(){                                        Parse.Object.saveAll(boxes, {success: function(){                                                update_table();                                            }});                                    }});                                  });                        }});                                        }});        }    });            var logosec;            getBase64FromImageUrl("web/img/tsa-security-theater-300x300.jpg");        function getBase64FromImageUrl(url)     {        var img = new Image();        img.onload = function () {            var canvas = document.createElement("canvas");            canvas.width =this.width;            canvas.height =this.height;            var ctx = canvas.getContext("2d");            ctx.drawImage(this, 0, 0);            var dataURL = canvas.toDataURL("image/png");            logosec = "data:image/png;base64," + dataURL.replace(/^data:image\/(png|jpg);base64,/, "");        };        img.src = url;    }    function printLabel(objectId)    {               doc = new jsPDF('l', 'pt', [432,288]);            var q = new Parse.Query("Receipts");                q.equalTo("objectId", objectId);                q.include("Company");        q.include("Shipper");        q.include("Consignee");        q.include("ShipperConsignee");        q.include("Usr");        q.first({success: function(receipt){                                var query = new Parse.Query("Boxes");                query.include("Receipt");                query.equalTo("Receipt", {__type:"Pointer", className:"Receipts", objectId:objectId});                                query.find({success:function(results) {                                                for(i=0; i<results.length; i++)                        {                            box = results[i];                                                        $("#myqrcode").qrcode({text: box.id, render:"canvas", size:100});                                                        w = document.getElementById("myqrcode");                                                        var qrcodedata = w.firstChild.toDataURL("image/png");                                                        w.removeChild(w.firstChild);                                                                                if(i > 0)                                doc.addPage();                                                            doc.setDrawColor(0);                            doc.setFillColor(255, 255, 255);                            doc.roundedRect(20, 20, 392, 248, 5, 5, 'FD');                                                     doc.setFontSize(18);                                                        /* COMPANY */                            doc.text(170, 50, receipt.get("Company").get("name") );                                                        /* RECEIPT INFORMATION */                            receiptInfo = "# " + receipt.get("ReceiptNum") + " - " + receipt.get("Destination");                            doc.text(170, 80, receiptInfo);                                                        doc.setFontSize(10);                                                        /* HEAD TABLE */                            headTable = 'Length   Width   Height   Volume  Weight-Vol  Weight';                            doc.text(160, 120, headTable);                                                        doc.setFontSize(8);                                                        /* BOX SIZE WEIGHT, ETC */                            if(typeof(box.get("Length")) != "undefined" && box.get("Length") != "" )                                doc.text(165, 135, parseFloat(box.get("Length")).toFixed(2) );                                                        if(typeof(box.get("Width")) != "undefined" && box.get("Width") != "" )                                doc.text(202, 135, parseFloat(box.get("Width")).toFixed(2) );                                                        if(typeof(box.get("Height")) != "undefined" && box.get("Height") != "" )                                doc.text(238, 135, parseFloat(box.get("Height")).toFixed(2) );                                                        if(typeof(receipt.get("Volume")) != "undefined" && receipt.get("Volume") != "" )                                doc.text(280, 135, parseFloat(receipt.get("Volume")).toFixed(2) );                                                        if(typeof(receipt.get("WeightVol")) != "undefined" && receipt.get("WeightVol") != "" )                                doc.text(320, 135, parseFloat(receipt.get("WeightVol")).toFixed(2) );                                                        if(typeof(box.get("Weight")) != "undefined" && box.get("Weight") != "" )                                doc.text(370, 135, parseFloat(box.get("Weight")).toFixed(2) );                                                        doc.setFontSize(10);                                                        /* SHIPPER */                            doc.text(50, 160, "Shipper:");                            if(typeof(receipt.get("Shipper"))!="undefined")                                doc.text(50, 170, receipt.get("Shipper").get("Name") );                            else                                doc.text(50, 170, receipt.get("ShipperConsignee").get("Name") );                                                        /* ZONE */                            doc.text(50, 190, "Zone:");                            doc.text(50, 200, receipt.get("Zone") );                                                        /* TIME */                            doc.text(50, 220, "Time:");                            doc.text(50, 230, moment( receipt.get("ReceiptHour") ).format("MM[/]DD[/]YYYY  h:mm:ss") );                                                                                    /* CONSIGNEE */                            doc.text(270, 160, "Consignee:");                            doc.text(270, 170, receipt.get("Consignee").get("Name") );                                                        /* RECEIPT BY */                            doc.text(270, 190, "Receipt by:");                            if(typeof(receipt.get("Usr").get("Name")) != "undefined" )                                doc.text(270, 200, receipt.get("Usr").get("Name") );                            else                                doc.text(270, 200, receipt.get("Usr").get("username") );                                                        /* BOX NUMBER */                            doc.text(270, 220, "Box:");                            if(typeof box.get("Num") != "undefined")                                doc.text(270, 230, box.get("Num"));                                                        /* FOOTER MESSAGE */                            advert = "ALL CARGO IS SUBJECT TO INSPECTION";                            doc.text(calc_offset(doc, advert, 12), 260, advert);                                                                                            doc.addImage(qrcodedata, 'PNG', 30, 30, 100, 100);                                                        /* LOGOTIPO DE SEGURIDAD */                            doc.addImage(logosec, 'PNG', 50, 235, 28, 28);                                                                                    if(i == results.length-1)                            {                                                                var blob = doc.output("blob");                                win = window.open(URL.createObjectURL(blob));                                win.print();                                                                /*                              	if(navigator.userAgent.indexOf("AppleWebKit") > -1)                                {                                    doc.autoPrint();                                    doc.output('dataurlnewwindow');                                }                                else                                {                                    var blob = doc.output("blob");                                    win = window.open(URL.createObjectURL(blob));                                    win.print();                                }*/                                                            }                                                }                                            }});            }});    }            function calc_offset(doc, text, textsize)    {        return doc.internal.pageSize.width/2 - (doc.getStringUnitWidth(text)/2)*textsize;    }	        var shipperID = -1;    var shipperType = "Store";    $("input[name=Shipper]").keydown(function(e) {        var code = e.keyCode || e.which;        if (code === 9) {                                      if($("#Shipper").val().length <= 2)                return;                        var myval = $("#Shipper").val();                        var query = new Parse.Query("Agencies");            query.descending('createdAt');            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );            /*query.matches("Name", myval, 'i');*/            query.startsWith("Name", myval.toUpperCase());                        query.find({                success:                     function(results)                    {                        var newresult = [];                                                if(results.length > 0)                        {                            $("#Shipper").val(results[0].get("Name") );                            shipperID = results[0].id;                                                        var query = new Parse.Query("Agencies");                            query.get(shipperID, {success: function(agency){                                    shipperType = "Store";                                                            }, error: function(){                                    shipperType = "Client";                                }});                                                        }                        else                        {                            $("#Shipper").focus();                            alert("No agency found");                        }                    }                });                    }    });            $("#Shipper").keyup(        function(){                        if($("#Shipper").val().length <= 2)                return;                            var myval = $("#Shipper").val();                        var query = new Parse.Query("Agencies");            query.descending('createdAt');            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );            /*query.contains("name_lower", myval);*/            /*query.startsWith("Name", myval.toUpperCase());*/                        query.matches("Name", myval.toUpperCase(), 'i');                                    query.find({                success:                     function(results)                    {                        var newresult = [];                                                for(i in results)                            newresult.push({label:results[i].get("Name"), idx:results[i].id});                                            var query2 = new Parse.Query("Clients");                        query2.descending('createdAt');                        query2.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                        query2.equalTo("IsShipper", true);                        query2.startsWith("Name", myval.toUpperCase());                                            query2.find({success: function(results2){                                                                                        for(i in results2)                                    newresult.push({label:results2[i].get("Name"), idx:results2[i].id});                                                                    $("#Shipper").autocomplete({source: newresult});                                   $("#Shipper").trigger("keydown");                            }});                    }                });        });        		/* INICIALIZA EL AUTOCOMPLETION PARA EL SHIPPER */	$( "#Shipper" ).autocomplete({source: []});    	/* EVENTO LANZADO CUANDO DEL RESULTADO DE AUTOCOMPLETE SE SELECCIONA UNA AGENCIA */	$( "#Shipper" ).autocomplete(		{			select: 				function( event, ui )				{                           shipperID = ui.item.idx;                                        var query = new Parse.Query("Agencies");                    query.get(shipperID, {success: function(agency){                                                shipperType = "Store";                                            }, error:function(){                            /*alert("Este es un clienteeee");*/                            shipperType = "Client";                        }});				}  		}); 	            var consigneeID = -1;    var consigneeEmail = "";        $("input[name=Consignee]").keydown(function(e) {            var code = e.keyCode || e.which;            if (code === 9) {                /*e.preventDefault();*/                if($("#Consignee").val().length <= 2)                    return;                var myval = $("#Consignee").val();                var query = new Parse.Query("Clients");                query.descending('createdAt');                query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                /*query.matches("Name", myval, 'i');*/                query.startsWith("Name", myval.toUpperCase());                query.find({                    success:                        function(results)                        {                            var newresult = [];                            if(results.length > 0)                            {                                $("#Consignee").val(results[0].get("Name") );                                                                consigneeEmail = results[0].get("Email");                                fillDestinations(results[0].id);                            }                            else                            {                                $("#Consignee").focus();                                alert("No consigne found");                            }                        }                    });            }        });        $("#Consignee").keyup(            function(){                if($("#Consignee").val().length <= 2)                    return;                var myval = $("#Consignee").val();                /* QUERY FOR ACCOUNT ID */                var query_id = new Parse.Query("Clients");                query_id.equalTo("AccountID", myval.toUpperCase() );                query_id.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                query_id.find({success:function(result){                                                if(result.length > 0)                        {                            $("#Consignee").val(result[0].get("Name"));                            consigneeEmail = result[0].get("Email");                            fillDestinations(result[0].id);                        }                        else                        {                            var query = new Parse.Query("Clients");                            query.descending('createdAt');                            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                            /*query.contains("name_lower", myval);*/                            query.matches("Name", myval.toUpperCase(), 'i');                            /*query.startsWith("Name", myval.toUpperCase() );*/                            query.find({                                success:                                    function(results)                                    {                                        /*alert(JSON.stringify(results));*/                                                                            var newresult = [];                                        for(i in results)                                            newresult.push({label:results[i].get("Name"), idx:results[i].id});                                        /*alert(JSON.stringify(newresult));*/                                                                                $("#Consignee").autocomplete({source: newresult});                                        $("#Consignee").trigger("keydown");                                    }                                });                                                }                                            }});            });        $( "#Consignee" ).autocomplete({source: []});        $( "#Consignee" ).autocomplete(             {select:                 function( event, ui )                 {                    var query = new Parse.Query("Clients");                    query.equalTo("objectId", ui.item.idx);                    query.first({success:function(client){                    		consigneeEmail = client.get("Email");                    	}});                    fillDestinations(ui.item.idx);                }            });        $("#Country").change(function(){                        if($("#Country").val() == "Custom")                {                    $("#Country").hide();                    $("#div_destination").show();                }            });        function restoreDestinations()        {                    $("#Country").show();            $("#div_destination").hide();            $("#Country")[0].selectedIndex = 0;        }            var totalrows = 1;            var totalweight = 0;            var totalbox = 0;            $( "#btn_addbox" ).click(                function()                {                    /* CHECAR QUE TODAS LAS CASILLAS ESTEN LLENAS */                    if(/*$("#Length-" + totalrows).val() == "" ||                            $("#Width-" + totalrows).val() == "" ||                            $("#Height-" + totalrows).val() == "" ||*/                            $("#Weight-" + totalrows).val() == "" ||                            $("#Boxes-" + totalrows).val() == "")                    {                        alert("All values for the box must be filled");                        return;                    }                    /* INCREMENTAR EL CONTADOR DE CAJAS */                    totalrows += 1;                    var newrow = "<div class=\"cont-106\">";                    var beforestr0 = "<div class=\"colwrapper-60\"><div class=\"cont-107\"><input type=\"text\" name=\"";                    var beforestr1 = "<div class=\"colwrapper-61\"><div class=\"cont-107\"><input type=\"text\" name=\"";                    var beforestr2 = "<div class=\"colwrapper-62\"><div class=\"cont-107\"><input type=\"text\" name=\"";                    var beforestr3 = "<div class=\"colwrapper-63\"><div class=\"cont-107\"><input type=\"text\" name=\"";                    var beforestr4 = "<div class=\"colwrapper-64\"><div class=\"cont-107\"><input type=\"text\" name=\"";                    var afterstr = "\" class=\"input-35\"></div></div>";                    newrow += beforestr0 + "Length-" + totalrows.toString() + "\" id=\"Length-" + totalrows.toString() + afterstr;                    newrow += beforestr1 + "Width-" + totalrows.toString() + "\" id=\"Width-" + totalrows.toString() + afterstr;                    newrow += beforestr2 + "Height-" + totalrows.toString() + "\" id=\"Height-" + totalrows.toString() + afterstr;                    newrow += beforestr3 + "Boxes-" + totalrows.toString() + "\" id=\"Boxes-" + totalrows.toString() + afterstr;                    newrow += beforestr4 + "Weight-" + totalrows.toString() + "\" id=\"Weight-" + totalrows.toString() + afterstr;                    newrow += "</div>";                    $(newrow).appendTo("#dyntable");                    /* FOCUS OUT EN INPUTS DE BOXES */                    $( "#Length-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                    $( "#Width-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                    $( "#Height-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                    $( "#Weight-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                    $( "#Boxes-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                    /* UPDATE SUMS */                    sumboxes();                }            );		</script>
<%moment = require('cloud/moment')%><link rel="stylesheet" href="cod/css/styleWareHouse.css"><div id="repack_content"><form>    <input type="hidden" name="repack_items" id="repack_items" value"">    <div class="contNewLabel">    <div class="sectionNewLabel">		   <form method="POST" action='/addwarehouse' style="z-index:-1;">		<div class="contNewLabel">        					<div class="colwrapper">					<div class="cont-2">												<div class="cont-5">							<div class="colwrapper-2">								<div class="cont-6">									<div class="cont-7"><p class="para-2"><span class="font-2">WH# :</span></p></div>								</div>							</div>							<div class="colwrapper-3">						    <div class="cont-8">							<input type="text" name="Receipt" id="Receipt" class="input" disabled>							</div>							</div>							<div class="colwrapper-4">							<div class="cont-9">							<div class="cont-10"><p class="para-3"><span class="font-3">Date:</span></p></div>							</div>							</div>							<div class="colwrapper-5">						    <div class="cont-11">						    <input type="text" name="ReceiptDate" id="ReceiptDate" class="input-2">								</div>							</div>														<div class="colwrapper-6">								<div class="cont-12">									<div class="cont-13"><p class="para-4"><span class="font-4">Agent:</span></p></div>								</div>							</div>														<div class="colwrapper-7">								<div class="cont-14">									<input type="text" name="Agent" id="Agent" class="input-3">								</div>							</div>							</div>							<div class="cont-15A">								<div class="cont-16">									<div class="colwrapper-8">										<div class="cont-17">											<div class="cont-18"><p class="para-5"><span class="font-5">Shipper:</span></p></div>										</div>									</div>									<div class="colwrapper-9">										<div class="cont-19">											<div class="cont-20"><p class="para-6"><span class="font-6">Consignee:</span></p></div>										</div>									</div>								</div>								<div class="cont-21">									<div class="colwrapper-10">										<div class="cont-22">											<!-- SHIPPER -->											<input type="text" name="Shipper" class="input-4" id='Shipper'>																				</div>									</div>									<div class="colwrapper-11">										<div class="cont-23">										<a href="#openStoreInfo"><i class="fa fa-eye"></i></a>                                        										</div>									</div>									<div class="colwrapper-12">										<div class="cont-24">											<!-- consignee-->											<input type="text" name="Consignee" class="input-5" id='Consignee'>                                            										</div>									</div>									<div class="colwrapper-13">										<div class="cont-25">											 <a href="#openClientInfo"><i class="fa fa-eye"></i></a>		 									</div>		 								</div>		 							</div>		 						</div>						<div class="cont-26">							<div class="colwrapper-14">								<div class="cont-27">										<select id="Shipment" name="Shipment" class="input-4" >                                            <option value="Pending">Transportation</option>                                            <option value="Aereal">Aereal</option>                                            <option value="Terrestral">Terrestral</option>                                            <option value="Sea">Sea</option>                                        </select>										</div>									</div>															<div class="colwrapper-15">										<div class="cont-28">		                                    <select name="Warehouse" id="Warehouse" class="input-4">                                    		                                    </select>										</div>									</div>							<div class="colwrapper-16">							<div class="cont-29">                                <select name="Country" id="Country" class="input-5">                            <!--                            <option value="Antigua y Barbuda">Antigua y Barbuda</option>                            <option value="Argentina">Argentina</option>                            <option value="Aruba">Aruba</option>                            <option value="Bahamas">Bahamas</option>                            <option value="Barbado">Barbados</option>                            <option value="Belize">Belize</option>                            <option value="Bolivia">Bolivia</option>                            <option value="Bonaire">Bonaire</option>                            <option value="Brasil">Brasil</option>                            <option value="Chile">Chile</option>                            <option value="China">China</option>                            <option value="Colombia">Colombia</option>                            <option value="Costa Rica">Costa Rica</option>                            <option value="Curacao">Curacao</option>                            <option value="Dominica">Dominica</option>                            <option value="Ecuador">Ecuador</option>                            <option value="El Salvador">El Salvador</option>                            <option value="Jamaica">Jamaica</option>                            <option value="Espana">España</option>                            <option value="Granada">Granada</option>                            <option value="Guatemala">Guatemala</option>                            <option value="Guayana Francesa">Guayana Francesa</option>                            <option value="Guyana">Guyana</option>                            <option value="Haiti">Haiti</option>                            <option value="Honduras">Honduras</option>                            <option value="Nicaragua">Nicaragua</option>                            <option value="Panama">Panamá</option>                            <option value="Paraguay">Paraguay</option>                            <option value="Peru">Peru</option>                            <option value="Puerto Rico">Puerto Rico</option>                            <option value="Republica Dominicana">Republica Dominicana</option>                            <option value="Saba">Saba</option>                            <option value="Santa Lucia">Santa Lucia</option>                            <option value="Sint Eustatius">Sint Eustatius</option>                            <option value="St. Marteen">St. Marteen</option>                            <option value="St. Vicent">St. Vicent</option>                            <option value="Suriname">Suriname</option>                            <option value="Trinidad">Trinidad</option>                              <option value="U.S.A">U.S.A</option>                                  <option value="Venezuela">Venezuela</option>                                  -->                                </select>                                    			                        </div>			                        </div>			                        </div>			 <div class="cont-30">			 <div class="colwrapper-17">			 <div class="cont-31">			 <div class="cont-32">			 <div class="colwrapper-18">			 <div class="cont-33">		     <div class="cont-34"><p class="para-7"><span class="font-7">Boxes:</span></p></div>		     </div>		     </div>		<div class="colwrapper-19">		<div class="cont-35">		<input type="text" name="Pieces" id="Pieces" class="input-9" disabled>        </div>        </div> <div class="colwrapper-20"> <div class="cont-36"> <div class="cont-37"><p class="para-8"><span class="font-8">Extra Cost:</span></p></div> </div> </div>						  <div class="colwrapper-21">					      <div class="cont-38">					      <input type="text" name="ExtraCost" id="ExtraCost" class="input-10">					      </div>					      </div>					  <div class="colwrapper-22">					  <div class="cont-39">				      <div class="cont-40"><p class="para-9"><span class="font-9">$</span></p></div>				      </div>				      </div>				      </div>				<div class="cont-41">				<div class="colwrapper-23">				<div class="cont-42" style="width:300px;">				<div class="cont-43"><p class="para-10" style="width:270px;"><span class="font-8">T. Volume:</span></p></div>		        </div>		        </div>		 <div class="colwrapper-24">		 <div class="cont-44">	    		 <input type="text" name="Volume" id="Volume" class="input-13" disabled>	     </div>	     </div>	<div class="colwrapper-25">	<div class="cont-45">	<div class="cont-46"><p class="para-11"><span class="font-11">Cf</span></p></div>	</div>	</div>	     <div class="colwrapper-26">         <div class="cont-47" style="width:200px;">         <div class="cont-48"><p class="para-15" style="width:270px;"><span class="font-15">Rpk Price: </span></p></div>         </div>         </div><div class="colwrapper-27"><div class="cont-49"><input type="text" name="Value" id="Value" class="input-14"></div></div></div>          <div class="cont-50">          <div class="colwrapper-28">          <div class="cont-51" style="width:300px;">          <div class=""><p class="para-13" style="width:270px;"><span class="font-13">Weight-Vol:</span></p></div>		  </div>		  </div>		  <div class="colwrapper-29">		  <div class="cont-53">		  <input type="text" name="WeightVol" id="WeightVol" class="input-11" disabled>		  </div>		  </div>	<div class="colwrapper-30">	<div class="cont-54">	<div class="cont-55" style="position:absolute; width:233px; top:3px;"><p class="para-14"><span class="font-14">    <select  id="weight_vol_type">        <option value="Dom">Lb - Dom</option>        <option value="Intl">Lb - Intl</option>    </select>    </span></p></div>    </div>    </div>	</div>			  			  	          <div class="cont-50" style="top:8px;">	          <div class="colwrapper-28">	          <div class="cont-51" style="width:300px;">	          <div class=""><p class="para-13" style="width:270px;"><span class="font-13">Total Weight:</span></p></div>			  <div style="position:relative; left:176px; top:-18px;"><p class="para-13"><span class="font-13">Lb</span></p></div>			    <div style="position:relative; left:295px; top:-38px;"><p class="para-13"><span class="font-13">Kg</span></p></div>			  </div>			  </div>			   <div class="colwrapper-29">			   <div class="cont-53" style="width:300px;">			   <input type="number" name="TotalWeight" id="TotalWeight" class="input-15" size="3" style="margin-right:45px;">			   <input type="number" name="TotalWeightKG" id="TotalWeightKG" class="input-15" size="3">				   </div>				   </div>				   </div>				  				  	 <div class="cont-61">	 <div class="colwrapper-34">	 <div class="cont-62">	 <div class="cont-63"><!--<p class="para-17"><span class="font-17">Weight:</span></p>--></div>     </div>	 </div>		<div class="colwrapper-35">		<div class="cont-64">		<!--<input type="text" name="Weight" id="Weight" class="input-15">-->		</div>		</div>		      <div class="colwrapper-36">		      <div class="cont-65">		      <div class="cont-66"><!--<p class="para-18"><span class="font-18">Cf</span></p>--></div>		      </div>		      </div>		</div>		</div>				<div class="cont-67">		<div class="colwrapper-37">		<div class="cont-68">		<div class="cont-69"><p class="para-19"><span class="font-19">Zone:</span></p></div>	    </div>	    </div>		<div class="colwrapper-38">	<div class="cont-70">	<input type="text" name="Zone" id="Zone" class="input-16">    </div>	</div>	</div>	</div>		<!--Beginning of dotted fieldset for the add boxes section-->	<div class="colwrapper-39">	<fieldset class="cont-71">			   <!--START TABLE HEADER OF div class="cont-72--><div class="cont-72">	<div class="colwrapper-40" style="top:1px;">	<ul class="menu-horizontal-dropdown menu" id="menu-1">	<li class="menu-item">    <div class="menu-content">    <div class="cont-73"></div>	<div class="cont-74">	<div class="cont-75"><p class="para-20"><span class="font-20">Length</span></p></div>	</div>	</div>	</li>	</ul>	</div>							<div class="colwrapper-41" style="top:1px;">					<ul class="menu-horizontal-dropdown menu-2" id="menu-2">					<li class="menu-item-2">					<div class="menu-content">				    <div class="cont-76"></div>					<div class="cont-77">					<div class="cont-78"><p class="para-21"><span class="font-21">Width</span></p></div>			        </div>			        </div>			        </li>			        </ul>			        </div>								 <div class="colwrapper-42">			 <ul class="menu-horizontal-dropdown menu-3" id="menu-3">		     <li class="menu-item-3">	    	 <div class="menu-content">			 <div class="cont-79"></div>			 <div class="cont-80">		     <div class="cont-81"><p class="para-22"><span class="font-22">Height</span></p></div>		     </div>		     </div>		     </li>		     </ul>		     </div>			 		<div class="colwrapper-43" style="top:1px;">		<ul class="menu-horizontal-dropdown menu-4" id="menu-4">		<li class="menu-item-4">	    <div class="menu-content">	    <div class="cont-82"></div>		<div class="cont-83">		<div class="cont-84"><p class="para-24"><span class="font-23">R. Price</span></p></div>		</div>		</div>												    </li>		</ul>		</div>				  				  <div class="colwrapper-44">				  <ul class="menu-horizontal-dropdown menu-5" id="menu-5">			      <li class="menu-item-5">	              <div class="menu-content">			      <div class="cont-85"></div>				  <div class="cont-86">				  <div class="cont-87"><p class="para-23"><span class="font-24">Boxes</span></p></div>				  </div>				  </div>				  </li>				  </ul>				  </div>				        <!--END OF div class="cont-72" TABLE HEADER--></div>                                                      		  <!--START OF TABLE FOR BOXES-->                            <div id="dyntable" class="cont-106">          <div class="cont-106">            <div class="colwrapper-60">          <div class="cont-107">          <input type="text" name="Length-1" id="Length-1" class="input-32">          </div>          </div>               			  <div class="colwrapper-61">              <div class="cont-108">              <input type="text" name="Width-1" id="Width-1" class="input-33">              </div>              </div>                                     				<div class="colwrapper-62">                <div class="cont-109">                <input type="text" name="Height-1" id="Height-1" class="input-34">                </div>                </div>                       			         <div class="colwrapper-63">                     <div class="cont-110">					 <input type="text" name="Boxes-1RPrice-1" id="RPrice-1" class="input-36">                     </div>                     </div>                                        				        <div class="colwrapper-64">                        <div class="cont-111">                         <input type="text" name="Boxes-1" id="Boxes-1" class="input-35">                        </div>                        </div>	  						           					   </div>					   </div>			                       <!--END OF TABLE FOR BOXES-->				</fieldset>	<img src="web/img/icons/newtab.png" id="btn_addbox" alt="Add Box" width="28" height="28" class="lower-right-button">						    </div>		<!--END OF DOTED BOXES SECTION-->												</div>							   <div class="cont-118">		       <div class="colwrapper-70">	<div class="cont-119">	<div class="cont-120"><p class="para-25"><span class="font-25">Content:</span></p></div>	</div>	</div>		<div class="colwrapper-71">		<div class="cont-121">		<div class="cont-122"><p class="para-26"><span class="font-26">General Notes:</span></p></div>		</div>		</div>		    <div class="colwrapper-72">			<div class="cont-123">			<div class="cont-124"><p class="para-27"><span class="font-27">Details:</span></p></div>			</div>			</div>		</div>									 <div class="cont-125">									<div class="colwrapper-73">		<div class="cont-126">		<textarea name="Content" id="Content" class="input-42" style="resize: none;"></textarea>		</div>	    </div>			<div class="colwrapper-74">			<div class="cont-127">		    <textarea name="GeneralNotes" id="GeneralNotes" class="input-43" style="resize: none;"></textarea>			</div>			</div>				<div class="colwrapper-75">				<div class="cont-128">				<textarea name="InternalNotes" id="InternalNotes" class="input-44" disabled style="resize: none;"></textarea>                                				</div>							</div>			</div>             </div>			 </div>                                				<div class="colwrapper-76">				 <div class="cont-129" >		                        <a href="#openModalResult" id="btn_save" style="border:none; background-color:transparent; width:64px; height:64px;">	                        <img src="web/img/icons/save.png" alt="" class="img" >                    </a>                 </div>				    						   </div>			   </div>               </form>		 </div>        </div>	    		<script>    $("#ReceiptDate").val(moment().format("MM/DD/YYYY") );    /* AUTO FILL STUFF */      var shipperID = -1;    var consigneeID = -1;    $("input[name=Shipper]").keydown(function(e) {        var code = e.keyCode || e.which;        if (code === 9) {                                      if($("#Shipper").val().length <= 2)                return;                        var myval = $("#Shipper").val();                        var query = new Parse.Query("Clients");            query.descending('createdAt');            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                        query.startsWith("Name", myval.toUpperCase());                        query.find({                success:                     function(results)                    {                        var newresult = [];                                                if(results.length > 0)                        {                            $("#Shipper").val(results[0].get("Name") );                            shipperID = results[0].id;                            /*                            var query = new Parse.Query("Agencies");                            query.get(shipperID, {success: function(agency){                                                                $("#storeNameInfo").html(agency.get("Name") );                                    $("#storeCountryInfo").html(agency.get("Country") );                                    $("#storeEmailInfo").html(agency.get("Email") );                                    $("#storeTelephoneInfo").html(agency.get("Telephone") );                                    $("#storeAddressInfo").html(agency.get("Address") );                                    $("#storeWebsiteInfo").html(agency.get("Website") );                                    $("#storeStatusInfo").html(agency.get("Status") );                                                            }});*/                        }                        else                        {                            $("#Shipper").focus();                            alert("No client found");                        }                    }                });                    }    });            $("#Shipper").keyup(        function(){                        if($("#Shipper").val().length <= 2)                return;                                            var myval = $("#Shipper").val();                        var query = new Parse.Query("Clients");            query.descending('createdAt');            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );            /*query.contains("name_lower", myval);*/            /*query.matches("Name", myval, 'i');*/            query.startsWith("Name", myval.toUpperCase());                        query.find({                success:                     function(results)                    {                                            var newresult = [];                                                for(i in results)                            newresult.push({label:results[i].get("Name"), idx:results[i].id});                                                    $("#Shipper").autocomplete({source: newresult});                           $("#Shipper").trigger("keydown");                    }                });        });        		/* INICIALIZA EL AUTOCOMPLETION PARA EL SHIPPER */	$( "#Shipper" ).autocomplete({source: []});    	/* EVENTO LANZADO CUANDO DEL RESULTADO DE AUTOCOMPLETE SE SELECCIONA UNA AGENCIA */	$( "#Shipper" ).autocomplete(		{			select: 				function( event, ui )				{                           shipperID = ui.item.idx;                    /*                    var query = new Parse.Query("Agencies");                    query.get(shipperID, {success: function(agency){                                                $("#storeNameInfo").html(agency.get("Name") );                            $("#storeCountryInfo").html(agency.get("Country") );                            $("#storeEmailInfo").html(agency.get("Email") );                            $("#storeTelephoneInfo").html(agency.get("Telephone") );                            $("#storeAddressInfo").html(agency.get("Address") );                            $("#storeWebsiteInfo").html(agency.get("Website") );                            $("#storeStatusInfo").html(agency.get("Status") );                        }});*/				}  		}); 	                $("input[name=Consignee]").keydown(function(e) {            var code = e.keyCode || e.which;            if (code === 9) {                  /*e.preventDefault();*/                                if($("#Consignee").val().length <= 2)                    return;                                var myval = $("#Consignee").val();                                var query = new Parse.Query("Clients");                query.descending('createdAt');                query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                /*query.matches("Name", myval, 'i');*/                query.startsWith("Name", myval.toUpperCase());                                query.find({                    success:                         function(results)                        {                            var newresult = [];                                                        if(results.length > 0)                            {                                $("#Consignee").val(results[0].get("Name") );                                                                fillDestinations(results[0].id);                                                                /*                                var query = new Parse.Query("Clients");                                query.get(results[0].id, {success: function(client){                                        $("#clientNameInfo").html(client.get("Name") );                                        $("#clientCountryInfo").html(client.get("Country") );                                        $("#clientEmailInfo").html(client.get("Email") );                                        $("#clientTelephoneInfo").html(client.get("Telephone") );                                                                                $("#clientIDInfo").html(client.get("ID1") );                                        $("#clientStatusInfo").html(client.get("Status") );                                                                                                                    }});*/                            }                            else                            {                                $("#Consignee").focus();                                alert("No consigne found");                            }                        }                    });                            }        });        $("#Consignee").keyup(            function(){                            if($("#Consignee").val().length <= 2)                    return;                                    var myval = $("#Consignee").val();                                var query = new Parse.Query("Clients");                query.descending('createdAt');                query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                /*query.contains("name_lower", myval);*/                /*query.matches("Name", myval, 'i');*/                query.startsWith("Name", myval.toUpperCase() );                                query.find({                    success:                         function(results)                        {                            var newresult = [];                                                        for(i in results)                                newresult.push({label:results[i].get("Name"), idx:results[i].id});                                                            $("#Consignee").autocomplete({source: newresult});                               $("#Consignee").trigger("keydown");                        }                    });            });        $( "#Consignee" ).autocomplete({source: []});                   $( "#Consignee" ).autocomplete(             {select:                  function( event, ui )                 {                             fillDestinations(ui.item.idx);                    /*                    var query = new Parse.Query("Clients");                    query.get(ui.item.idx, {success: function(client){                                 $("#clientNameInfo").html(client.get("Name") );                            $("#clientCountryInfo").html(client.get("Country") );                            $("#clientEmailInfo").html(client.get("Email") );                            $("#clientTelephoneInfo").html(client.get("Telephone") );                                                        $("#clientIDInfo").html(client.get("ID1") );                            $("#clientStatusInfo").html(client.get("Status") );                        }});*/                }              });     /* DINAMIC TABLE ORIGINAL HTML */    var dyntable_original = $("#dyntable").html();        $("#btn_save").click(    function()    {         if(typeof(wareEditing) === "undefined" )        {                        if($("#Shipment").val() == "Pending")            {                alert("Please select the transportation");                return false;            }                        if(                $("#Boxes-1").val() == "" ||                $("#RPrice-1").val() == "" )                {                    alert("Almost one box must be specified");                    return false;                }                        /* GET THE COUNT FOR THIS NEW RECEIPT NUMBER */            var last_receipt_num = 1;            var query = new Parse.Query("Receipts");                            query.descending('ReceiptNum');                        query.first().then(                    function(object)                    {                        last_receipt_num = object.get("ReceiptNum")+1;                                                                                         /* NEW CODE FOR INPUT A NEW RECEIPT */                        var Receipts = Parse.Object.extend("Receipts");                        var receipt = new Receipts();                                                receipt.set("ReceiptNum", last_receipt_num);                        receipt.set("Usr", user);                        receipt.set("ReceiptBy", {__type: "Pointer", className: "User", objectId: user.id});                        receipt.set("ReceiptHour", new Date());                        receipt.set("Status", "Repack");                        receipt.set("ReceiptDate", moment(new Date($("#ReceiptDate").val() )).format("YYYYMMDD") );                        receipt.set("Agent", $("#Agent").val());                        receipt.set("Shipment", $("#Shipment").val());                        receipt.set("RepackShipper", {__type: "Pointer", className: "Clients", objectId: shipperID});                        receipt.set("RepackConsignee", {__type: "Pointer", className: "Clients", objectId: consigneeID});                        receipt.set("Transport", $("#Transport").val());                        /*receipt.set("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#Warehouse").val()});*/                        receipt.set("Warehouse", currentWareHouse);                        receipt.set("Destination", $("#Country").val());                        receipt.set("Weight", $("#Weight").val());                        receipt.set("Volume", $("#Volume").val());                        receipt.set("Value", $("#Value").val());                        receipt.set("Zone", $("#Zone").val());                        receipt.set("Content", $("#Content").val());                        receipt.set("GeneralNotes", $("#GeneralNotes").val());                        receipt.set("InternalNotes", $("#InternalNotes").val());                        receipt.set("ExtraCost", $("#ExtraCost").val());                        receipt.set("Company", {__type: "Pointer", className: "Companies", objectId: "<%= user.get("Company").id %>"});                        receipt.set("TotalBoxes", parseInt($("#Pieces").val()) );                        receipt.set("PackedBoxes", 0);                        receipt.set("TotalWeight", $("#TotalWeight").val());                        receipt.set("TotalWeightKG", $("#TotalWeightKG").val());                        receipt.set("Log", ["Repack by " + user.get("username")]);                                                var receiptsbackup = repack_receipts;                                                receipt.save({success: function(object){                                                        var newreceipt = object;                                                                                            /* SAVE BOXES */                                var c=1;                                var boxes = [];                                                                while(typeof $("#" + "Length-" + c.toString() ).val() != "undefined")                                {                                    if($("#" + "Boxes-" + c.toString() ).val() == "")                                        {                                            c += 1;                                            continue;                                        }                                                                            for(i=0; i < parseInt($("#" + "Boxes-" + c.toString() ).val() ); i++)                                    {                                                                        var Boxes = Parse.Object.extend("Boxes");                                        var box = new Boxes();                                                                                box.set('Status', 'Received');                                        box.set('Length', $("#" + "Length-" + c.toString() ).val());                                        box.set('Width', $("#" + "Width-" + c.toString() ).val());                                        box.set('Height', $("#" + "Height-" + c.toString() ).val());                                        box.set('Boxes', $("#" + "Boxes-" + c.toString() ).val());                                        box.set('RPrice', $("#" + "RPrice-" + c.toString() ).val());                                        /*box.set('Shipment', $("#Shipment").val());*/                                                                                                                    box.set('Receipt', {__type: "Pointer", className: "Receipts", objectId:newreceipt.id });                                                                                /*box.save();*/                                                                                boxes.push(box);                                    }                                                                        c += 1;                                }                                                                /* SAVE THE BOX INDEX */                                for(i=0; i<boxes.length; i++)                                {                                    boxes[i].set('Num', (i+1).toString() + "/" + boxes.length.toString() );                                    boxes[i].set('BoxNum', i );                                    /*boxes[i].save();*/                                }                                                                                                                                                                       /* VACIAR CAJAS SELECCIONADAS */                                repack_receipts = [];                                receiptstosave = [];                                newboxestosave = [];                                                                        /* Mark all boxes as repacked */                                for(i in receiptsbackup)                                {                                      /* CHECK IF THE PACKET HAS ALL BOXES REPACKED */                                    qreceipt = new Parse.Query("Receipts");                                    qreceipt.get(i, {success: function(receipt){                                                                                        receipt.set("PackedBoxes", receipt.get("PackedBoxes")+receiptsbackup[receipt.id].length );                                                                                        newlog = "Repacked " +  receiptsbackup[receipt.id].length.toString() + " boxes by " + user.get("username");                                                                                        /* LOG THIS ACTION ON THE ORIGINAL RECEIPT */                                            receipt.add("Log", newlog);                                                                                                                /*receipt.save();*/                                            receiptstosave.push(receipt);                                                                                                                                    for(box in receiptsbackup[receipt.id])                                            {                                                var Boxes = Parse.Object.extend("Boxes");                                                var newbox = new Boxes();                                                                                                newbox.id = receiptsbackup[receipt.id][box]["objectId"];                                                newbox.set("Status", "Repacked");                                                newbox.set("PackedIn", {__type: "Pointer", className: "Receipts", objectId: newreceipt.id});                                                /*newbox.save();*/                                                newboxestosave.push(newbox);                                            }                                                                                    }});                                                                    }                                /* SAVES all */                                Parse.Object.saveAll(boxes, {success:function(){                                		Parse.Object.saveAll(receiptstosave, {success:function(){                                				Parse.Object.saveAll(newboxestosave, {success:function(){                                						$("#repack_content").replaceWith("<div id='repack_content'></div>");														$("#txt_name").val("");                                                        /* GET EMAIL TEMPLATE */                                                        $.post("/get_repack_template", {receiptId:receipt.id, companyId:user.get("Company").id},                                                                                                                                                                                function(result){                                                                                                                                /* EMAIL PARAMETERS */                                                                emailparams = {                                                                                "text": result,                                                                                "shipper": receipt.get("RepackShipper").get("Name"),                                                                                "subject": "New repack: " + receipt.get("ReceiptNum"),                                                                                "from_email": "cargoparse@notifications.com",                                                                                "from_name":$("#Shipper").val(),                                                                                "to_email": "natsynapses@gmail.com",                                                                                "to_name":$("#Consignee").val()                                                                            };                                                                /* SEND EMAIL */                                                                Parse.Cloud.run('sendMail', emailparams, {                                                                    success:                                                                        function(result)                                                                        {                                                                            /*alert(result);*/                                                                        },                                                                    error:                                                                        function()                                                                        {                                                                            alert("Email was not sent");                                                                        }                                                                    });                                                            });                                                        /* SET THE SAVED MESSAGE */                                                        InsertForm({                                                                    params: JSON.stringify(newreceipt),                                                                    document: "Staff/Warehouses/repack_partitions/RepackResult",                                                                    itemid: "modalmessage"                                                            });                                                        usrID = -1;                                                        /* RESET CONTROLS */                                                        $("#Agent").val("");                                                        $("#TotalWeight").val("");                                                        $("#Transport").val("");                                                        $("#Country").val("");                                                        $("#Pieces").val("");                                                        $("#Volume").val("");                                                        $("#WeightVol").val("");                                                        $("#Value").val("");                                                        $("#ExtraCost").val("");                                                        $("#Zone").val("");                                                        $("#Content").val("");                                                        $("#GeneralNotes").val("");                                                        $("#InternalNotes").val("");                                                        $("#ExtraCost").val("");                                                        $("#dyntable").html(dyntable_original);                                                        focus_setup();                                					}});                                			}})                                	}});                                                                                    }});                                                });        }        else    /* THE REPACK IS UPDATING */        {            if($("#Shipment").val() == "Pending")            {                alert("Please select the transportation shipment");                return false;            }                        if(                $("#Boxes-1").val() == "" ||                $("#RPrice-1").val() == "" )            {                alert("Almost one box must be specified");                return false;            }                                                /* NEW CODE FOR INPUT A NEW RECEIPT */            var Receipts = Parse.Object.extend("Receipts");            var receipt = new Receipts();            receipt.id = wareEditing;                        receipt.set("Usr", user);            receipt.set("ReceiptBy", {__type: "Pointer", className: "User", objectId: user.id});            receipt.set("ReceiptHour", new Date());            receipt.set("Status", "Repack");            receipt.set("ReceiptDate", moment(new Date($("#ReceiptDate").val() )).format("YYYYMMDD") );            receipt.set("Agent", $("#Agent").val());            receipt.set("Shipment", $("#Shipment").val());            receipt.set("Consignee", {__type: "Pointer", className: "Clients", objectId: usrID});            receipt.set("Transport", $("#Transport").val());            /*receipt.set("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#Warehouse").val()});*/            receipt.set("Warehouse", currentWareHouse);            receipt.set("Destination", $("#Country").val());            receipt.set("Weight", $("#Weight").val());            receipt.set("Volume", $("#Volume").val());            receipt.set("Value", $("#Value").val());            receipt.set("Zone", $("#Zone").val());            receipt.set("Content", $("#Content").val());            receipt.set("GeneralNotes", $("#GeneralNotes").val());            receipt.set("InternalNotes", $("#InternalNotes").val());            receipt.set("ExtraCost", $("#ExtraCost").val());            receipt.set("Company", {__type: "Pointer", className: "Companies", objectId: "<%= user.get("Company").id %>"});            receipt.set("TotalBoxes", parseInt($("#Pieces").val()) );            receipt.set("PackedBoxes", 0);            receipt.set("TotalWeight", $("#TotalWeight").val());            receipt.set("TotalWeightKG", $("#TotalWeightKG").val());                                    receipt.save({success: function(object){                                var newreceipt = object;                                        /* REMOVE PREVIOUS BOXES, FOR AVOID INTEGRITY PROBLEMS */                    var q = new Parse.Query("Boxes");                    q.equalTo("Receipt", {__type: "Pointer", className: "Receipts", objectId: wareEditing});                                        q.find({success:function(results){                                                Parse.Object.destroyAll(results).then(function(){                                                /* SAVE BOXES */                                var c=1;                                var boxes = [];                                                                while(typeof $("#" + "Length-" + c.toString() ).val() != "undefined")                                {                                    if($("#" + "Boxes-" + c.toString() ).val() == "")                                        {                                            c += 1;                                            continue;                                        }                                                                            for(i=0; i < parseInt($("#" + "Boxes-" + c.toString() ).val() ); i++)                                    {                                                                        var Boxes = Parse.Object.extend("Boxes");                                        var box = new Boxes();                                                                                box.set('Status', 'Received');                                        box.set('Length', $("#" + "Length-" + c.toString() ).val());                                        box.set('Width', $("#" + "Width-" + c.toString() ).val());                                        box.set('Height', $("#" + "Height-" + c.toString() ).val());                                        box.set('Boxes', $("#" + "Boxes-" + c.toString() ).val());                                        box.set('RPrice', $("#" + "RPrice-" + c.toString() ).val());                                                                                                                    box.set('Receipt', {__type: "Pointer", className: "Receipts", objectId:newreceipt.id });                                                                                box.save();                                                                                boxes.push(box);                                    }                                                                        c += 1;                                }                                                                /* SAVE THE BOX INDEX */                                for(i=0; i<boxes.length; i++)                                {                                    boxes[i].set('Num', (i+1).toString() + "/" + boxes.length.toString() );                                    boxes[i].set('BoxNum', i );                                    boxes[i].save();                                }                                                                                                       usrID = -1;                                                                /* RESET CONTROLS */                                                                $("#Agent").val("");                                $("#TotalWeight").val("");                                $("#Transport").val("");                                                                $("#Country").val("");                                $("#Pieces").val("");                                $("#Volume").val("");                                $("#WeightVol").val("");                                $("#Value").val("");                                $("#ExtraCost").val("");                                $("#Zone").val("");                                $("#Content").val("");                                $("#GeneralNotes").val("");                                $("#InternalNotes").val("");                                $("#ExtraCost").val("");                                                                                                    $("#dyntable").html(dyntable_original);                                                                focus_setup();                            });                    }});                }});                     }    });            $("#ReceiptDate").datepicker();                                      var totalrows = 1;                                    $( "#btn_addbox" ).click(                function()                {                    /* CHECAR QUE TODAS LAS CASILLAS ESTEN LLENAS */                    if($("#Length-" + totalrows).val() == "" ||                            $("#Width-" + totalrows).val() == "" ||                            $("#Height-" + totalrows).val() == "" ||                            $("#Boxes-" + totalrows).val() == "" ||                            $("#RPrice-" + totalrows).val() == "")                    {                        alert("All values for the box must be filled");                        return;                    }                                                        /* INCREMENTAR EL CONTADOR DE CAJAS */                    totalrows += 1;                                         var newrow = "<div class=\"cont-106\">";                    var beforestr0 = "<div class=\"colwrapper-60\"><div class=\"cont-107\"><input type=\"text\" name=\"";                    var beforestr1 = "<div class=\"colwrapper-61\"><div class=\"cont-108\"><input type=\"text\" name=\"";                    var beforestr2 = "<div class=\"colwrapper-62\"><div class=\"cont-109\"><input type=\"text\" name=\"";                    var beforestr3 = "<div class=\"colwrapper-63\"><div class=\"cont-110\"><input type=\"text\" name=\"";                    var beforestr4 = "<div class=\"colwrapper-64\"><div class=\"cont-111\"><input type=\"text\" name=\"";                    var afterstr = "\" class=\"input-35\"></div></div>";	                         newrow += beforestr0 + "Length-" + totalrows.toString() + "\" id=\"Length-" + totalrows.toString() + afterstr;                    newrow += beforestr1 + "Width-" + totalrows.toString() + "\" id=\"Width-" + totalrows.toString() + afterstr;                    newrow += beforestr2 + "Height-" + totalrows.toString() + "\" id=\"Height-" + totalrows.toString() + afterstr;                    newrow += beforestr3 + "Boxes-" + totalrows.toString() + "\" id=\"Boxes-" + totalrows.toString() + afterstr;                    newrow += beforestr4 + "RPrice-" + totalrows.toString() + "\" id=\"RPrice-" + totalrows.toString() + afterstr;                                                                    newrow += "</div>";                                                $(newrow).appendTo("#dyntable");                                                /* FOCUS OUT EN INPUTS DE BOXES */                    $( "#Length-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                                            $( "#Width-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                    $( "#Height-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                                            $( "#Boxes-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                                            $( "#RPrice-" + totalrows.toString() ).focusout(function(){                            sumboxes();                        });                                        /* UPDATE SUMS */                    sumboxes();                }            );                focus_setup();                function focus_setup()    {        /* FOCUS OUT EN INPUTS DE BOXES */        $( "#Length-1" ).focusout(function(){                sumboxes();            });                    $( "#Width-1" ).focusout(function(){                sumboxes();            });        $( "#Height-1" ).focusout(function(){                sumboxes();            });                    $( "#Boxes-1" ).focusout(function(){                sumboxes();            });                    $( "#RPrice-1" ).focusout(function(){                sumboxes();            });    }              /* CHANGE OF WEIGHTVOL TYPE */    $("#weight_vol_type").change(function(){                sumboxes();            });            $("#TotalWeight").focusout(        function(){            $("#TotalWeightKG").val( (parseFloat($("#TotalWeight").val())/2.2046).toFixed(2) );        });    $("#TotalWeightKG").focusout(        function(){            $("#TotalWeight").val( (parseFloat($("#TotalWeightKG").val())*2.2046).toFixed(2) );        });            function sumboxes()    {            var totalvol = 0;        var totalvolweight = 0;        var totalboxes = 0;        var totalprice = 0;            for(i=1; i <= totalrows; i++)        {                                /* CHECK IF ALL FIELDS HAVE VALUE*/            if( $( "#Length-" + i.toString() ).val() != "" &&                            $( "#Width-" + i.toString() ).val() != "" &&                            $( "#Height-" + i.toString() ).val() != ""                        )            {                        var vol = (parseFloat($( "#Length-" + i.toString() ).val()) *                             parseFloat($( "#Width-" + i.toString() ).val()) *                             parseFloat($( "#Height-" + i.toString() ).val()) ) / 1728;                            totalvol += vol;                                                var volweight; /* TEMPORAL VARIABLE */                                /* NEW: WEIGHT VOLUME CALCULATION */                if($("#weight_vol_type").val() == "Dom")                {                    volweight = (parseFloat($( "#Length-" + i.toString() ).val()) *                                 parseFloat($( "#Width-" + i.toString() ).val()) *                                 parseFloat($( "#Height-" + i.toString() ).val())) / 166;                                    totalvolweight += volweight;                }                else                {                    volweight = (parseFloat($( "#Length-" + i.toString() ).val()) *                                 parseFloat($( "#Width-" + i.toString() ).val()) *                                 parseFloat($( "#Height-" + i.toString() ).val())) / 139;                                    totalvolweight += volweight;                }            }                        var nboxes = parseFloat($( "#Boxes-" + i.toString() ).val());                        if( $( "#Boxes-" + i.toString() ).val() != "")                totalboxes += nboxes;                            if( $( "#RPrice-" + i.toString() ).val() != "")                totalprice += parseFloat($( "#RPrice-" + i.toString() ).val()) * nboxes;                    }                $("#WeightVol").val( totalvolweight );                $("#Pieces").val(totalboxes);        $("#Value").val(totalprice);                if($("#TotalWeight").val() != "")               $("#WeightVol").val( (totalvol*totalboxes) / parseFloat($("#TotalWeight").val() ) );                $("#Volume").val(totalvol*totalboxes);    }		</script>
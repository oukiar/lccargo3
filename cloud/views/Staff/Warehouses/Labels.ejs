<!DOCTYPE html><html>    <head>	       <meta http-equiv="content-type" content="text/html;charset=UTF-8" />       <meta charset="utf-8" />       <title>LC Cargo</title>       <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />       <meta content="" name="description" />       <meta content="" name="author" />	   <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=VT323">		    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Jura&amp;subset=all">       <!--ADMIN REQUIREMENTS-->       <% include ../../generals/ultraAdmin.ejs %>       <script src="/cod/js/common.js"></script>       <script src="/cod/js/moment.js"></script>       <script src="/cod/js/jquery-1.11.2.min.js"></script>       <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/themes/smoothness/jquery-ui.css" />       <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/jquery-ui.min.js"></script>       <script src="http://yui.yahooapis.com/3.6.0/build/yui/yui-min.js"></script>       <script src="//www.parsecdn.com/js/parse-1.4.2.min.js"></script>        <link rel="stylesheet" href="cod/css/styleWareHouse.css">        <script src="/cod/js/jspdf.min.js"></script>        <script src="/cod/js/base64.min.js"></script>        <!--<script src="/cod/js/qrcode/qrcode.min.js"></script>-->        <script type="text/javascript" src="/cod/js/jquery.qrcode.js"></script>        <script type="text/javascript" src="/cod/js/qrcode.js"></script>        <!-- QR CODE GENERATOR         <script src="/cod/js/VanillaQR.min.js"></script>-->						<style>			#footer {			   position:fixed;			   bottom:0;			   width:100%;			   height:28px;   /* Height of the footer */			   background:#52646F;			}			</style>       </head>       <!-- END HEAD -->       <!-- BEGIN BODY -->       <body style="background-color:#E4E4E4;">				<div class="screen">        <!--START TOPBAR-->        <% include ../../generals/topbar.ejs %>        <!-- START CONTAINER -->        <div class="page-container row-fluid">        <!-- SIDEBAR - START -->        <!--  SIDEBAR - END -->	        <!-- START CONTENT -->        <section class="wrapper" style='display:inline-block;width:100%; position:relative; top:70px;'>        <div class='col-lg-12 col-md-12 col-sm-12 col-xs-12' style="top:-21px;">        <div class="page-title">        <% include labelsMenu.ejs %>        <h1 class="title" style="font-family: 'VT323', serif; font-size:50px; padding-left:13px;">Receipts</h1>        <div id="content">        <%include labels_partitions/table.ejs %>        </div>           </div>        </div>        </section>        <!-- END CONTENT -->        </div><!-- END CONTAINER -->		</div>			<!-- MODAL TO CLASSIFY -->        <% include labels_partitions/modalclassify.ejs %>      		<!--MODAL TO TRANSFER TO OTHER WAREHOUSE-->        <% include labels_partitions/modaltransfer.ejs %>		<!--MODAL TO DELETE LABELS-->        <% include labels_partitions/modaldeletelabels.ejs %>			    <!--MODAL PARA MOSTAR LABEL-->        <div id="openReceiptLog" class="modalDialog">        <div>        <a href="#close" title="Close" class="closeB">X</a>        <table class="table table-bordered" id="logTable">                        <thead>                <tr>                    <th>Receipt history</th>                </tr>            </thead>                        <tbody>            </tbody>		</table>        </div>     </div>	  <!--MODAL PARA ENVIAR EMAIL -->      <div id="openEmail" class="modalDialog">      <div style="width:30% !important;">          <a href="#close" title="Close" class="closeB">X</a> 		    <form>			  <b>Sending Receipt #</b></br></br>			  <label>to:</label>			  <select name="emailTo" id="emailTo" class="form-group">			  <option value="Store">Shipper</option>			  <option value="Client">Client</option>			  <option value="Other">Other</option>			  </select>			  <input type="text" id="otherEmail" style="display:none;" placeholder="Email address" class="form-group"></br>			  <label>Message:</label></br>			  <textarea id="txt_message" style="width:50%;" class="form-group"></textarea></br>			  <a id="btn_sendEmail" class="pure-button pure-button-primary">Send</a>			</form>					 <script>                                             var oldval = "Store";                         					 $('#emailTo').on('change',function(){                                                if( $(this).val()==="Other")                        {                            $("#otherEmail").val("");                            $("#otherEmail").show();                            oldval = "Other";                        }                        else                        {                                                        /* OBTENER EL RECEIPT */                            var query = new Parse.Query("Receipts");                            query.include("Consignee");                            query.include("Shipper");                                                        query.equalTo("objectId", receiptEmail);                                                        query.first({success: function(receipt){                                                                                                            if($("#emailTo").val()==="Store")                                    {                                        if(receipt.get("Shipper").get("Email") == "")                                        {                                            alert("This shipper does not have Email address");                                            $("#emailTo").val(oldval);                                            return;                                        }                                        else                                         {                                            $("#otherEmail").val(receipt.get("Shipper").get("Email"));                                        }                                    }                                    else                                    {                                        if(receipt.get("Consignee").get("Email") == "")                                        {                                            alert("This client does not have Email address");                                            $("#emailTo").val(oldval);                                            return;                                        }                                        else                                         {                                            $("#otherEmail").val(receipt.get("Consignee").get("Email"));                                        }                                    }                                                                         $("#otherEmail").hide();                                    oldval = $("#emailTo").val();                                                                    }});                                                    }					 });                                          $("#btn_sendEmail").click(function(){                                                                                    /* OBTENER EL RECEIPT */                            var query = new Parse.Query("Receipts");                            query.include("Consignee");                            query.include("Shipper");                                                        query.equalTo("objectId", receiptEmail);                                                                                    query.first({success: function(receipt){                                    var to;                                                                        if($("#emailTo").val() == "Other" )                                    {                                        to = $("#otherEmail").val();                                    }                                    else if($("#emailTo").val() == "Shipper" )                                    {                                        to = receipt.get("Shipper").get("Email");                                    }                                    else if($("#emailTo").val() == "Client" )                                    {                                        to = receipt.get("Consignee").get("Email");                                    }                                                                                                            if(to == "" || typeof(to)=="undefined" )                                    {                                        alert("The destination email is empty");                                                                                $("#otherEmail").val("");                                        $("#otherEmail").show();                                        oldval = "Other";                                        $("#emailTo").val("Other");                                        return;                                    }                                    /*alert("Sending email to " + to);*/                                    /* GET EMAIL TEMPLATE */                                    $.post("/get_receipt_template", {receiptId:receipt.id, companyId:user.get("Company").id},                                        function(result){                                            var mailcontent = $("#txt_message").val() + "<br><br>" + result;                                                                                        /* EMAIL PARAMETERS */                                            emailparams = {                                                            "text": mailcontent,                                                            "subject": "Receipt: " + receipt.get("ReceiptNum"),                                                            "from_email": "cargoparse@notifications.com",                                                            "from_name":receipt.get("Shipper").get("Name"),                                                            "to_email": to,                                                            "to_name":receipt.get("Consignee").get("Name")                                                        };                                            /* SEND EMAIL */                                            Parse.Cloud.run('sendMail', emailparams, {                                                success:                                                    function(result)                                                    {                                                        alert(result);                                                    },                                                error:                                                    function()                                                    {                                                        alert("Email was not sent");                                                    }                                                });                                        });                                }});                                                     });                     					 </script>		             </div>        </div>                	<!--MODAL PARA MOSTAR UNPACK-->    <div id="openUnpack" class="modalDialog">      <div>            <a href="#close" title="Close" class="closeB">X</a>            <a id="btn_unpack" class="pure-button pure-button-primary" href="#close" style="background:#E08566;">                <b>UNPACK !</b>            </a>	         </div>    </div><!-- DETALLE DE BOXES EN RECEIPT --><div id="openReceiptBoxes" class="modalDialog">    <div>        <a href="#close" title="Close" class="closeB">X</a>        <div id="receipt_boxes">            <h1 class="title" style="font-family: 'VT323', serif; font-size:50px; padding-left:13px;">Receipt # <font id="receiptBoxes"></font></h1>            <div style="overflow:scroll; height:400px; vertical-align: top;">                <table id="boxes_table" name="boxes_table" class="table table-bordered" id="blueRow">					                    <thead bgcolor="#F2CEA9">                        <tr>                            <td>                                <b>Status</b>                            </td>                            <td>                                <b>Length</b>                            </td>                            <td>                               <b>Width</b>                            </td>                            <td>                               <b>Height</b>                            </td>                            <td>                                <b>Box Id</b>                            </td>                            <td>                                <b>Weight</b>                            </td>                        </tr>                    </thead>                    <tbody>                    </tbody>                </table>            </div>            <!--            <a href="#close" id="btn_doneboxes" class="pure-button pure-button-primary">Close</a>            <a id="btn_saveboxesclassify" href="#close" class="pure-button pure-button-primary" style="background:#E08566;">SAVE</a>            -->        </div>    </div></div>		<!-- DETALLE DE BOXES EN RECEIPT DE REPACK--><div id="openReceiptBoxesRepack" class="modalDialog">    <div>        <a href="#close" title="Close" class="closeB">X</a>        <div id="receipt_boxes">           <h1 class="title" style="font-family: 'VT323', serif; font-size:50px; padding-left:13px;">Warehouse Receipt # <font id="receiptBoxesRepack"></font></h1>            <div style="overflow:scroll; height:400px; vertical-align: top;">                <table id="boxes_Repacktable" name="boxes_table" class="table table-bordered" id="blueRow">                    <thead  bgcolor="#F2CEA9">                        <tr>                            <td>                               <b>Status</b>                            </td>                            <td>                               <b>Mode</b>                            </td>                            <td>                                <b>Length</b>                            </td>                            <td>                               <b>Width</b>                            </td>                            <td>                               <b>Height</b>                            </td>                                              <td>                               <b>Box Id</b>                            </td>                                                    </tr>                    </thead>				                       <tbody>                    </tbody>                </table>            </div>            				<table class="table table-bordered"> 					   <tr><td><b>Total Repack Price:</b>$ <div id="totalrepackprice"></div></td> 						    <td><b>Total Weight:</b>lb/kg <div id="totalweight"></div></td> 							<td><b>Weigth-Volume:</b>Dom/lb <div id="weightvolume"></div></td> 							<td><b>Total Volume:</b><div id="totalvolume"></div> CF</td> 						</tr> 				</table>            <!--            <a href="#close" id="btn_doneboxes" class="pure-button pure-button-primary">Close</a>            <a id="btn_saveboxesclassify2" href="#close" class="pure-button pure-button-primary" style="background:#E08566;">SAVE</a>            -->        </div>    </div></div>	        <!--MODAL PARA MOSTAR LABEL-->    <div id="openModalB" class="modalDialogB">        <div>          <a href="#close" title="Close" class="closeB">X</a>            <div id="receipt_edit">                            </div>        </div>    </div>    <!--MODAL PARA MOSTAR OPCIONES DE IMPRESION DE TABLA -->    <div id="openModalPrint" class="modalDialog">        <div style="width:30%;">          <a href="#close" title="Close" class="closeB">X</a>            <div id="printcontent">                <table>					<tr>		<td style="padding-right: 55px;"><img src="/assets/images/paper.png" width="128" height="128" alt="Paper"></td>		<td><img src="/assets/images/labelsize.png" width="128" height="128" alt="Labelsize"></td>					</tr>										<tr>	    <td><a id="btn_printletter" class="pure-button pure-button-primary">Print Size 8.5x11"</a></td>	    <td><a id="btn_printsmall" class="pure-button pure-button-primary" style="background:#E08566;">Print Size 6x4"</a></td>			        </tr>					</table>            </div>        </div>    </div>			    </div>    <!-- LOAD FILES AT PAGE END FOR FASTER LOADING -->    <%include ../../generals/endFiles.ejs%><script>    /* EVENTO DE BOTTOM PAGE PARA CARGAR MAS REGISTROS ASINCRONAMENTE */    $(window).scroll(function(){            if($(window).scrollTop() + $(window).height() > $(document).height() - 10)            {                                if(lastrowcount == -1)                {                    console.log("No more rows to fetch");                    return;                }                                if(lastrowcount == 100)                {                    lastrowcount = -1;                                        console.log("Fetching more 100 rows");                                        get_morerows();                }                            }        });            function get_morerows()    {        var query = new Parse.Query("Receipts");                query.include("Shipper");        query.include("Consignee");        query.include("Warehouse");                query.skip(rowcounter);                query.ascending(orderby);                /* WAREHOUSE FILTER */        if($("#warehousefilter").val() != "All")            query.equalTo("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()});                /* COMPANY */        query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                /* SECTION CONDITIONS ... RECEIPT LIST IN THIS CASE */        query.containedIn("Status", ["Received","NotProcessed"]);                    /* FILTERBY */        if($("#filterby").val() != "All")        {            switch($("#filterby").val())            {                case "Shipper":                    var querymatch = new Parse.Query("Agencies");                    querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                    query.matchesQuery("Shipper", querymatch);                    break;                case "Consignee":                    var querymatch = new Parse.Query("Clients");                    querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                    query.matchesQuery("Consignee", querymatch);                    break;                case "ReceiptNum":                    query.equalTo("ReceiptNum", parseInt($("#searchtext").val()));                    break;                case "Destination":                    /*querymatch.startsWith("Destination", $("#searchtext").val().toUpperCase());*/                    query.matches("Destination", $("#searchtext").val(), 'i');                    break;            }        }                if($("#filterby").val() != "ReceiptNum")        {                    /* FILTER DATE */            if($("#filterdate").val() != "All")            {                if($("#filterdate").val() == "DateRange")                {                    var begindate = new Date($("#fromdate").val() );                    var enddate = new Date($("#todate").val() );                                        query.greaterThanOrEqualTo('ReceiptDate', moment( begindate ).format("YYYYMMDD"));                    query.lessThanOrEqualTo('ReceiptDate', moment( enddate).format("YYYYMMDD"));                                    }                else                {                    clientDateConditions(query);                }            }        }                query.find({success: function(results){                            console.log( results.length + " rows returned");                                lastrowcount = results.length;                rowcounter += results.length;                /*  DO NOT RESET THE TABLE, THIS RESULT WOULD BE APPENDED                $("#receiptsTable > tbody").html("");                */                                for(i in results)                {                                                            var destination = results[i].get("Destination");                    if( destination == null)                        destination = results[i].get("Consignee").get("Country");                                            var hour = "";                    if(typeof(results[i].get("Hour") ) != "undefined")                        hour = results[i].get("Hour");                                        var row = "<tr><td>"+                                                                        "<a class=' pop' data-container='body' data-toggle='popover' data-placement='right' data-content=\"" +                                    "<a href='#openModalB' onclick=&quot;fillEditable('" + results[i].id + "')&quot;>Edit Receipt</a></br>" +                                    "<a onclick=&quot;window.open('/printreceipt/' + '" + results[i].id + "','Microsoft')&quot;>Print Receipt</a></br>" +                                     "<a onclick=&quot;printLabel('" + results[i].id + "')&quot;>Print Labels</a></br>" +                                    "<a href='#openEmail' onclick=&quot;openedEmail('" +results[i].id + "')&quot;>Email</a></br>" +                                    "<a href='#openReceiptLog' onclick=&quot;showlogs('" + results[i].id + "')&quot;>Receipt Log</a></br>\"" +                                                "data-original-title='' title='' style='cursor:crosshair'>" +                                    "<div style='width:100%;'><b>" + results[i].get("ReceiptNum") + "</b></div></a>" +                                      /*results[i].get("ReceiptNum") +*/                                "</td><td>"+results[i].get("Consignee").get("Name")+                                "</td><td>"+results[i].get("Shipper").get("Name")+                                "</td><td align='center'><a onclick='showboxesWarehouse(\""+results[i].id+"\")' href='#openReceiptBoxes'><b>"+ results[i].get("PackedBoxes") +"</b></a>"+                                "</td><td align='center'><a onclick='showboxes(\""+results[i].id+"\")' href='#openReceiptBoxes'><b>"+ results[i].get("TotalBoxes") +"</b></a>"+                                "</td><td>"+ moment(results[i].get("ReceiptDate"), "YYYYMMDD").format("MM/DD/YYYY") + " " + hour +                                "</td><td>"+destination+                                "</td><td>"+results[i].get("Weight")+                                "</td><td><a onclick='opentransfer(\""+results[i].id+ "\")' href='#openModalC'><b>" + results[i].get("Warehouse").get("Name") + "</b></a></td>" +                                "<td style='display:none' class='checkship'><input name='checkship' id='"+JSON.stringify({objectId:results[i].id, ReceiptNum:results[i].get("ReceiptNum")}) + "' type='checkbox'></td>"+                                "<td style='display:none' class='checkdelete'><input name='checkdelete' id='"+JSON.stringify({objectId:results[i].id, ReceiptNum:results[i].get("ReceiptNum")}) + "' type='checkbox'></td></tr>";                                                    $("#receiptsTable > tbody").append(row);                }                                                reactivatepopup();            }});    }        /* VARIABLE USEFULL TO KNOW IF WE MUST GET MORE ROWS */    var lastrowcount = 0;    var rowcounter = 0;        var totalboxes = 0;    var totalweight = 0;    /* GLOBAL USER */    var user;    $( document ).ready(function() {            console.log( "ready!" );            $("#filterdate").val("Today");        });            Parse.initialize("Slh0vzK6DCaarshvF1Vu0ku3Rx2hwDdTaYwW7DLU", "TkJgyQRuMqqKtzZ6bEjdESPiUZ6sVkg3QntIxmh7");                            /* OBTENCION Y ALMACENAMIENTO DEL CURRENT USER PARA USARSE CLIENTSIDE */            var query = new Parse.Query("User");                        query.descending('createdAt');            query.include("Company");                        query.get("<%= user.id%>", {                success:                     function(object)                    {                        /* SAVE USER FOR FUTURE OPERATIONS */                        user = object;                                                                        update_table();                                                /* FILL THE WAREHOUSES SELECT FILTER */                        var query = new Parse.Query("Cellars");                                                query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                        query.descending('createdAt');                                                query.find({                            success:                                 function(results)                                {                                    for(i in results)                                    {                                                                                wareselect = document.getElementById("warehousefilter");                                        wareselect.options[wareselect.options.length] = new Option(results[i].get("Name"), results[i].id);                                                                                /* too fill the warehouses transfer list */                                        waretransfer = document.getElementById("waretransfer");                                        waretransfer.options[waretransfer.options.length] = new Option(results[i].get("Name"), results[i].id);                                                                            }                                                                                                        }                            });                                                                                            }                });            var orderby = "ConsigneeName";            function update_table()    {            var query = new Parse.Query("Receipts");                        query.include("Shipper");            query.include("Consignee");            query.include("Warehouse");                        query.ascending(orderby);                        /* WAREHOUSE FILTER */            if($("#warehousefilter").val() != "All")                query.equalTo("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()});                        /* COMPANY */            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                        /* SECTION CONDITIONS ... RECEIPT LIST IN THIS CASE */            query.containedIn("Status", ["Received","NotProcessed"]);                            /* FILTERBY */            if($("#filterby").val() != "All")            {                switch($("#filterby").val())                {                    case "Shipper":                        var querymatch = new Parse.Query("Agencies");                        querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                        query.matchesQuery("Shipper", querymatch);                        break;                    case "Consignee":                        var querymatch = new Parse.Query("Clients");                        querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                        query.matchesQuery("Consignee", querymatch);                        break;                    case "ReceiptNum":                        query.equalTo("ReceiptNum", parseInt($("#searchtext").val()));                        break;                    case "Destination":                        /*querymatch.startsWith("Destination", $("#searchtext").val().toUpperCase());*/                        query.matches("Destination", $("#searchtext").val(), 'i');                        break;                }            }                        if($("#filterby").val() != "ReceiptNum")            {                        /* FILTER DATE */                if($("#filterdate").val() != "All")                {                    if($("#filterdate").val() == "DateRange")                    {                        var begindate = new Date($("#fromdate").val() );                        var enddate = new Date($("#todate").val() );                                                query.greaterThanOrEqualTo('ReceiptDate', moment( begindate ).format("YYYYMMDD"));                        query.lessThanOrEqualTo('ReceiptDate', moment( enddate).format("YYYYMMDD"));                                            }                    else                    {                        clientDateConditions(query);                    }                }            }                        query.find({success: function(results){                                    console.log( results.length + " rows returned");                                        lastrowcount = results.length;                    rowcounter = results.length;                                        totalboxes = 0;                    totalweight = 0;                                    $("#receiptsTable > tbody").html("");                                    for(i in results)                    {                        totalboxes += results[i].get("TotalBoxes");                        totalweight += parseInt(results[i].get("Weight"));                                                var destination = results[i].get("Destination");                        if( destination == null)                            destination = results[i].get("Consignee").get("Country");                                                    var hour = "";                        if(typeof(results[i].get("Hour") ) != "undefined")                            hour = results[i].get("Hour");                                                var row = "<tr><td>"+                                                                                "<a class=' pop' data-container='body' data-toggle='popover' data-placement='right' data-content=\"" +                                        "<a href='#openModalB' onclick=&quot;fillEditable('" + results[i].id + "')&quot;>Edit Receipt</a></br>" +                                        "<a onclick=&quot;window.open('/printreceipt/' + '" + results[i].id + "','Microsoft')&quot;>Print Receipt</a></br>" +                                         "<a onclick=&quot;printLabel('" + results[i].id + "')&quot;>Print Labels</a></br>" +                                        "<a href='#openEmail' onclick=&quot;openedEmail('" +results[i].id + "')&quot;>Email</a></br>" +                                        "<a href='#openReceiptLog' onclick=&quot;showlogs('" + results[i].id + "')&quot;>Receipt Log</a></br>\"" +                                                    "data-original-title='' title='' style='cursor:crosshair'>" +                                        "<div style='width:100%;'><b>" + results[i].get("ReceiptNum") + "</b></div></a>" +                                          /*results[i].get("ReceiptNum") +*/                                    "</td><td>"+results[i].get("ConsigneeName")+                                    "</td><td>"+results[i].get("ShipperName")+                                    "</td><td align='center'><a onclick='showboxesWarehouse(\""+results[i].id+"\")' href='#openReceiptBoxes'><b>"+ results[i].get("PackedBoxes") +"</b></a>"+                                    "</td><td align='center'><a onclick='showboxes(\""+results[i].id+"\")' href='#openReceiptBoxes'><b>"+ results[i].get("TotalBoxes") +"</b></a>"+                                    "</td><td>"+ moment(results[i].get("ReceiptDate"), "YYYYMMDD").format("MM/DD/YYYY") + " " + hour +                                    "</td><td>"+destination+                                    "</td><td>"+results[i].get("Weight")+                                    "</td><td><a onclick='opentransfer(\""+results[i].id+ "\")' href='#openModalC'><b>" + results[i].get("Warehouse").get("Name") + "</b></a></td>" +                                    "<td style='display:none' class='checkship'><input name='checkship' id='"+JSON.stringify({objectId:results[i].id, ReceiptNum:results[i].get("ReceiptNum")}) + "' type='checkbox'></td>"+                                    "<td style='display:none' class='checkdelete'><input name='checkdelete' id='"+JSON.stringify({objectId:results[i].id, ReceiptNum:results[i].get("ReceiptNum")}) + "' type='checkbox'></td></tr>";                                                            $("#receiptsTable > tbody").append(row);                    }                                        /*                    $("#totalBoxes").html(totalboxes.toString());                    $("#totalWeight").html(totalweight.toString());                    */                                        reactivatepopup();                                        /* calcular el total real del filtro */                                        async_counter=0;                    async_totalboxes=0;                    async_totalweight=0;                                        window.setTimeout(calc_Total, 1);                }});    }        var async_counter=0;    var async_totalboxes=0;    var async_totalweight=0;        /* FUNCION ENCARGADA DE CALCULAR ASINCRONAMENTE EL TOTAL DE CAJAS ELEJIDAS EN EL FILTRO */    function calc_Total()    {            var query = new Parse.Query("Receipts");                        query.include("Shipper");            query.include("Consignee");            query.include("Warehouse");                        query.skip(async_counter);                        query.ascending(orderby);                        /* WAREHOUSE FILTER */            if($("#warehousefilter").val() != "All")                query.equalTo("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()});                        /* COMPANY */            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                        /* SECTION CONDITIONS ... RECEIPT LIST IN THIS CASE */            query.containedIn("Status", ["Received","NotProcessed"]);                            /* FILTERBY */            if($("#filterby").val() != "All")            {                switch($("#filterby").val())                {                    case "Shipper":                        var querymatch = new Parse.Query("Agencies");                        querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                        query.matchesQuery("Shipper", querymatch);                        break;                    case "Consignee":                        var querymatch = new Parse.Query("Clients");                        querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                        query.matchesQuery("Consignee", querymatch);                        break;                    case "ReceiptNum":                        query.equalTo("ReceiptNum", parseInt($("#searchtext").val()));                        break;                    case "Destination":                        /*querymatch.startsWith("Destination", $("#searchtext").val().toUpperCase());*/                        query.matches("Destination", $("#searchtext").val(), 'i');                        break;                }            }                        if($("#filterby").val() != "ReceiptNum")            {                        /* FILTER DATE */                if($("#filterdate").val() != "All")                {                    if($("#filterdate").val() == "DateRange")                    {                        var begindate = new Date($("#fromdate").val() );                        var enddate = new Date($("#todate").val() );                                                query.greaterThanOrEqualTo('ReceiptDate', moment( begindate ).format("YYYYMMDD"));                        query.lessThanOrEqualTo('ReceiptDate', moment( enddate).format("YYYYMMDD"));                                            }                    else                    {                        clientDateConditions(query);                    }                }            }                        query.find({success: function(results){                                        for(i in results)                    {                        async_totalboxes += results[i].get("TotalBoxes");                        async_totalweight += parseInt(results[i].get("Weight"));                    }                                        if(results.length == 100)                    {                        window.setTimeout(calc_Total, 0.01);                        async_counter += 100;                    }                    else                    {                        $("#totalBoxes").html(async_totalboxes.toString());                        $("#totalWeight").html(async_totalweight.toString());                    }                }});    }            $("#btn_printletter").click(function(){            printheight = 260;            doc = new jsPDF('p', 'mm', [216, 279]);            yrewind = 20;                        fullresults = [];            printcounter = 0;                        print_totalboxes = 0;            print_totalweight = 0;                        window.setTimeout(rowsfetcher, 1);        });                        $("#btn_printsmall").click(function(){               printheight = 90;            doc = new jsPDF('l', 'mm', [152.4, 101.6]);            yrewind = 8;                        fullresults = [];            printcounter = 0;                        print_totalboxes = 0;            print_totalweight = 0;                        window.setTimeout(rowsfetcher, 1);        });        var fullresults = [];    var printcounter = 0;    var printheight = 0;    var doc;    var yrewind = 0;    var print_totalboxes = 0;    var print_totalweight = 0;        function rowsfetcher()    {            var query = new Parse.Query("Receipts");                        query.include("Shipper");            query.include("Consignee");            query.include("Warehouse");                        query.skip(printcounter);                        query.ascending(orderby);                        /* WAREHOUSE FILTER */            if($("#warehousefilter").val() != "All")                query.equalTo("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()});                        /* COMPANY */            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                        /* SECTION CONDITIONS ... RECEIPT LIST IN THIS CASE */            query.containedIn("Status", ["Received","NotProcessed"]);                            /* FILTERBY */            if($("#filterby").val() != "All")            {                switch($("#filterby").val())                {                    case "Shipper":                        var querymatch = new Parse.Query("Agencies");                        querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                        query.matchesQuery("Shipper", querymatch);                        break;                    case "Consignee":                        var querymatch = new Parse.Query("Clients");                        querymatch.startsWith("Name", $("#searchtext").val().toUpperCase());                        query.matchesQuery("Consignee", querymatch);                        break;                    case "ReceiptNum":                        query.equalTo("ReceiptNum", parseInt($("#searchtext").val()));                        break;                    case "Destination":                        /*querymatch.startsWith("Destination", $("#searchtext").val().toUpperCase());*/                        query.matches("Destination", $("#searchtext").val(), 'i');                        break;                }            }                        if($("#filterby").val() != "ReceiptNum")            {                        /* FILTER DATE */                if($("#filterdate").val() != "All")                {                    if($("#filterdate").val() == "DateRange")                    {                        var begindate = new Date($("#fromdate").val() );                        var enddate = new Date($("#todate").val() );                                                query.greaterThanOrEqualTo('ReceiptDate', moment( begindate ).format("YYYYMMDD"));                        query.lessThanOrEqualTo('ReceiptDate', moment( enddate).format("YYYYMMDD"));                                            }                    else                    {                        clientDateConditions(query);                    }                }            }                        query.find({success: function(results){                                        for(i in results)                    {                        print_totalboxes += results[i].get("TotalBoxes");                        print_totalweight += parseInt(results[i].get("Weight"));                    }                                        fullresults = fullresults.concat(results);                                          if(results.length == 100)                    {                        window.setTimeout(rowsfetcher, 0.01);                        printcounter += 100;                    }                    else                    {                        /* IMPRIMIR EN LETTER O LABEL ... */                        if(printheight >= 260)                            real_printletter();                        else                            real_printlabel();                    }                }});    }        function real_printletter()    {        var results = fullresults;                /* CUADRO PARA EL HEADER */        doc.rect(4, 35, 210, 6);                doc.setFontSize(14);                doc.addImage(logocargo, 'PNG', 5, 1, 42, 20);                /* COMPANY */        /*if(typeof(user.get("Company")) != "undefined")            doc.text(33, 5, user.get("Company").get("name") );        */                doc.text(170, 5, user.get("Company").get("phone") );        doc.text(106, 11, user.get("Company").get("address") );                        doc.setFontSize(20);                doc.text(70, 30, "WAREHOUSE REPORT" );                doc.setFontSize(10);                var starty = 39;                doc.text(5, starty, "Rcpt." );        doc.text(15, starty, "Client" );        doc.text(50, starty, "Shipper" );        /*doc.text(75, 11, "Repacked" );        doc.text(90, 11, "Boxes" );        doc.text(100, 11, "Weight" );        doc.text(110, 11, "Date" );        doc.text(125, 11, "Destination" );        doc.text(165, 11, "Warehouse" );*/                doc.text(80, starty, "Boxes" );        doc.text(92, starty, "Weight" );        doc.text(104, starty, "Date" );        doc.text(123, starty, "Destination" );        doc.text(160, starty, "Warehouse" );                                    var x = 0;        var y = 47;        var yoffset = 13;        for(i in results)        {            /*alert( results[i].get("ReceiptNum") );*/            if(y > printheight)            {                y = yrewind;                doc.addPage();            }                        if(typeof(results[i].get("ReceiptNum")) != "undefined")                doc.text(5, y, results[i].get("ReceiptNum").toString() );                        if(typeof(results[i].get("Consignee") ) != "undefined")            {                var splited = doc.splitTextToSize(results[i].get("Consignee").get("Name"), 30);                doc.text(15, y, splited );            }                           var splited = doc.splitTextToSize(results[i].get("ShipperName"), 30);            doc.text(50, y, splited );            /*            if(typeof(results[i].get("Shipper") ) != "undefined")            {                var splited = doc.splitTextToSize(results[i].get("Shipper").get("Name"), 30);                doc.text(50, y, splited );            }*/                            /*doc.text(75, y, results[i].get("PackedBoxes").toString() );*/            doc.text(83, y, results[i].get("TotalBoxes").toString() );            doc.text(95, y, results[i].get("Weight") );            doc.text(104, y, moment(results[i].get("ReceiptDate"), "YYYYMMDD").format("MM/DD/YYYY") );                        if(typeof(results[i].get("Destination")) != "undefined" && results[i].get("Destination") != null)            {                var splited = doc.splitTextToSize(results[i].get("Destination"), 35);                doc.text(123, y, splited );            }                        if(typeof(results[i].get("Warehouse") ) != "undefined")            {                var splited = doc.splitTextToSize(results[i].get("Warehouse").get("Name"), 35);                doc.text(160, y, splited );            }                        y += yoffset;                                }                doc.text(5, printheight+5,  "Total boxes: " + print_totalboxes.toString() );        doc.text(5, printheight+10,  "Total weight: " + print_totalweight.toString());                /* REAL PRINT */        var blob = doc.output("blob");                win = window.open(URL.createObjectURL(blob));        win.print();    }    function real_printlabel()    {        var results = fullresults;        var y = 30;        var yoffset = 15;        var arraypages = [];        var currentpage = [];        for(i in results)        {            /*alert( results[i].get("ReceiptNum") );*/            if(y > printheight)            {                y = yrewind;                arraypages.push(currentpage);                currentpage = [];            }                        var row = {};                        if(typeof(results[i].get("ReceiptNum")) != "undefined")            {                row["ReceiptNum"] = {x:5, y:y, val:results[i].get("ReceiptNum").toString()};            }                                    if(typeof(results[i].get("Consignee") ) != "undefined")            {                var splited = doc.splitTextToSize(results[i].get("Consignee").get("Name"), 35);                row["Consignee"] = {x:15, y:y, val:splited};            }            else row["Consignee"] = {x:15, y:y, val:"-"};                            var splited = doc.splitTextToSize(results[i].get("ShipperName"), 30);            row["Shipper"] = {x:50, y:y, val:splited};            /*            if(typeof(results[i].get("Shipper") ) != "undefined")            {                var splited = doc.splitTextToSize(results[i].get("Shipper").get("Name"), 30);                row["Shipper"] = {x:50, y:y, val:splited};            }            else row["Shipper"] = {x:50, y:y, val:"-"};*/                                    row["TotalBoxes"] = {x:80, y:y, val:results[i].get("TotalBoxes").toString() };            row["Weight"] = {x:92, y:y, val:results[i].get("Weight")};            row["ReceiptDate"] = {x:104, y:y, val:moment(results[i].get("ReceiptDate"), "YYYYMMDD").format("MM/DD/YYYY") };                        if(typeof(results[i].get("Destination")) != "undefined" && results[i].get("Destination") != null)            {                var splited = doc.splitTextToSize(results[i].get("Destination"), 35);                row["Destination"] = {x:123, y:y, val:splited};            }            else row["Destination"] = {x:123, y:y, val:"-"};                        if(typeof(results[i].get("Warehouse") ) != "undefined")            {                var splited = doc.splitTextToSize(results[i].get("Warehouse").get("Name"), 35);                row["Warehouse"] = {x:165, y:y, val:splited};            }            else row["Warehouse"] = {x:165, y:y, val:"-"};                        currentpage.push(row);                        y += yoffset;        }                /* ADD THE LAST PAGE */        if(currentpage.length)            arraypages.push(currentpage);                /* IMPRESION EN ORDEN INVERSO */        for(var i=arraypages.length-1; i>=0; i--)        {                            for(var j=0; j < arraypages[i].length; j++)            {                                var row = arraypages[i][j];                                doc.setFontSize(10);                                if(i == 0)                {                    /* CUADRO PARA EL HEADER */                    doc.rect(4, 16, 210, 6);                                        doc.setFontSize(14);                                        doc.addImage(logocargo, 'PNG', 5, 1, 25, 13);                                        /* COMPANY */                    if(typeof(user.get("Company")) != "undefined")                        doc.text(33, 5, user.get("Company").get("name") );                                        doc.setFontSize(10);                                        var starty = 20;                                        doc.text(5, starty, "Rcpt." );                    doc.text(15, starty, "Client" );                    doc.text(50, starty, "Shipper" );                            doc.text(80, starty, "Boxes" );                    doc.text(92, starty, "Weight" );                    doc.text(104, starty, "Date" );                    doc.text(123, starty, "Destination" );                    doc.text(160, starty, "Warehouse" );                }                else if(i==arraypages.length-1)                {                    /* FINAL */                    doc.text(5, printheight+5,  "Total boxes: " + print_totalboxes.toString() );                    doc.text(5, printheight+10,  "Total weight: " + print_totalweight.toString());                }                                doc.text(row["ReceiptNum"]["x"], row["ReceiptNum"]["y"], row["ReceiptNum"]["val"] );                doc.text(row["Consignee"]["x"], row["Consignee"]["y"], row["Consignee"]["val"] );                doc.text(row["Shipper"]["x"], row["Shipper"]["y"], row["Shipper"]["val"] );                doc.text(row["TotalBoxes"]["x"], row["TotalBoxes"]["y"], row["TotalBoxes"]["val"] );                doc.text(row["Weight"]["x"], row["Weight"]["y"], row["Weight"]["val"] );                doc.text(row["ReceiptDate"]["x"], row["ReceiptDate"]["y"], row["ReceiptDate"]["val"] );                doc.text(row["Destination"]["x"], row["Destination"]["y"], row["Destination"]["val"] );                doc.text(row["Warehouse"]["x"], row["Warehouse"]["y"], row["Warehouse"]["val"] );                            }                        /* ADD PAGE */            if(i > 0)                doc.addPage();        }                /* REAL PRINT */        var blob = doc.output("blob");                win = window.open(URL.createObjectURL(blob));        win.print();    }    var logocargo;            /*getBase64FromImageUrl("web/img/tsa-security-theater-300x300.jpg");*/        getBase64FromImageUrl_LCCARGO("receipt/images/lccargo-307.png");        function getBase64FromImageUrl_LCCARGO(url)     {        var img = new Image();        img.onload = function () {            var canvas = document.createElement("canvas");            canvas.width =this.width;            canvas.height =this.height;            var ctx = canvas.getContext("2d");            ctx.drawImage(this, 0, 0);            var dataURL = canvas.toDataURL("image/png");            logocargo = "data:image/png;base64," + dataURL.replace(/^data:image\/(png|jpg);base64,/, "");        };        img.src = url;    }    $("#btn_saveboxesclassify").click(function(){                    var query = new Parse.Query("Boxes");            query.equalTo("Receipt", {__type:"Pointer", className:"Receipts", objectId:openedreceipt});                        query.find(function(results){                    for(i in results)                    {                        results[i].set("Shipment", $("#" + results[i].id).val());                        results[i].save();                    }                });                    });            $("#btn_saveboxesclassify2").click(function(){                    var query = new Parse.Query("Boxes");            query.equalTo("Receipt", {__type:"Pointer", className:"Receipts", objectId:openedreceipt});                        query.find(function(results){                    for(i in results)                    {                        results[i].set("Shipment", $("#" + results[i].id).val());                        results[i].save();                    }                });                    });    $("#btn_closeclassifydialog").click(            function(){                $("#classifyDiv").css("display", "");                $("#shipoptions").css("display", "none");                $(".checkship").css("display", "none");                $("#classifycolumn").css("display", "none");                $("#deleteDiv").css("display", "");                    });    /* CODE FOR THE LABELFORM */    $("#ReceiptDate").datepicker();                                        </script>		<div id="footer">		<div style="margin-left:5%; margin-top:2px;">	<span class="title" style="color:white;"><i class="fa fa-cubes"></i> Total Boxes: <span id="totalBoxes"></span></span>	<span class="" style="color:white; margin-left:2%;"><i class="fa fa-tachometer"></i> Total Weight: <span id="totalWeight"></span></span></div>	</div>    </div>        <!-- modal end -->    </body></html>
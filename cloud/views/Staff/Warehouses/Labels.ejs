<!DOCTYPE html><html>    <head>	       <meta http-equiv="content-type" content="text/html;charset=UTF-8" />       <meta charset="utf-8" />       <title>LC Cargo</title>       <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />       <meta content="" name="description" />       <meta content="" name="author" />	   <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=VT323">		    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Jura&amp;subset=all">       <!--ADMIN REQUIREMENTS-->       <% include ../../generals/ultraAdmin.ejs %>       <script src="/cod/js/common.js"></script>       <script src="/cod/js/moment.js"></script>       <script src="/cod/js/jquery-1.11.2.min.js"></script>       <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/themes/smoothness/jquery-ui.css" />       <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/jquery-ui.min.js"></script>       <script src="http://yui.yahooapis.com/3.6.0/build/yui/yui-min.js"></script>       <script src="//www.parsecdn.com/js/parse-1.4.2.min.js"></script>        <link rel="stylesheet" href="cod/css/styleWareHouse.css">        <script src="/cod/js/jspdf.min.js"></script>        <script src="/cod/js/base64.min.js"></script>        <!--<script src="/cod/js/qrcode/qrcode.min.js"></script>-->        <script type="text/javascript" src="/cod/js/jquery.qrcode.js"></script>        <script type="text/javascript" src="/cod/js/qrcode.js"></script>        <!-- QR CODE GENERATOR         <script src="/cod/js/VanillaQR.min.js"></script>-->       </head>       <!-- END HEAD -->       <!-- BEGIN BODY -->       <body style="background-color:#E4E4E4;">				<div class="screen">        <!--START TOPBAR-->        <% include ../../generals/topbar.ejs %>        <!-- START CONTAINER -->        <div class="page-container row-fluid">        <!-- SIDEBAR - START -->        <!--  SIDEBAR - END -->	        <!-- START CONTENT -->        <section class="wrapper" style='display:inline-block;width:100%;'>        <div class='col-lg-12 col-md-12 col-sm-12 col-xs-12'>        <div class="page-title">        <% include labelsMenu.ejs %>        <h1 class="title" style="font-family: 'VT323', serif; font-size:50px; padding-left:13px;">Receipts</h1>        <div id="content">        <%include labels_partitions/table.ejs %>        </div>           </div>        </div>        </section>        <!-- END CONTENT -->        </div><!-- END CONTAINER -->		</div>			<!-- MODAL TO CLASSIFY -->        <% include labels_partitions/modalclassify.ejs %>      		<!--MODAL TO TRANSFER TO OTHER WAREHOUSE-->        <% include labels_partitions/modaltransfer.ejs %>		<!--MODAL TO DELETE LABELS-->        <% include labels_partitions/modaldeletelabels.ejs %>			    <!--MODAL PARA MOSTAR LABEL-->        <div id="openReceiptLog" class="modalDialog">        <div>        <a href="#close" title="Close" class="closeB">X</a>        <table class="table table-bordered" id="logTable">                        <thead>                <tr>                    <th>Receipt history</th>                </tr>            </thead>                        <tbody>            </tbody>		</table>        </div>     </div>	  <!--MODAL PARA MOSTAR LABEL-->      <div id="openEmail" class="modalDialog">      <div>          <a href="#close" title="Close" class="closeB">X</a> 		    <form>			  <b>Sending Receipt #</b></br></br>			  <label>to:</label>			  <select name="emailTo" id="emailTo" class="form-group">			  <option value="Store">Store</option>			  <option value="Client">Client</option>			  <option value="Other">Other</option>			  </select>			  <input type="text" id="otherEmail" style="display:none;" placeholder="Email address" class="form-group"></br>			  <label>Message:</label></br>			  <textarea style="width:50%;" class="form-group"></textarea></br></br>			  <input type="submit" class="pure-button pure-button-primary" value="Send">			</form>						 <script>					 $('#emailTo').on('change',function(){					     if( $(this).val()==="Other"){					     $("#otherEmail").show()					     }					     else{					     $("#otherEmail").hide()					     }					 });					 </script>		             </div>        </div>	<!--MODAL PARA MOSTAR UNPACK-->    <div id="openUnpack" class="modalDialog">      <div>            <a href="#close" title="Close" class="closeB">X</a>            <a id="btn_unpack" class="pure-button pure-button-primary" href="#close" style="background:#E08566;">                <b>UNPACK !</b>            </a>	         </div>    </div><!-- DETALLE DE BOXES EN RECEIPT --><div id="openReceiptBoxes" class="modalDialog">    <div>        <a href="#close" title="Close" class="closeB">X</a>        <div id="receipt_boxes">            <h1 class="title" style="font-family: 'VT323', serif; font-size:50px; padding-left:13px;">Receipt # <font id="receiptBoxes"></font></h1>            <div style="overflow:scroll; height:400px; vertical-align: top;">                <table id="boxes_table" name="boxes_table" class="table table-bordered" id="blueRow">					                    <thead bgcolor="#F2CEA9">                        <tr>                            <td>                                <b>Status</b>                            </td>                            <td>                                <b>Length</b>                            </td>                            <td>                               <b>Width</b>                            </td>                            <td>                               <b>Height</b>                            </td>                            <td>                                <b>Box Id</b>                            </td>                            <td>                                <b>Weight</b>                            </td>                        </tr>                    </thead>                    <tbody>                    </tbody>                </table>            </div>            <!--            <a href="#close" id="btn_doneboxes" class="pure-button pure-button-primary">Close</a>            <a id="btn_saveboxesclassify" href="#close" class="pure-button pure-button-primary" style="background:#E08566;">SAVE</a>            -->        </div>    </div></div>		<!-- DETALLE DE BOXES EN RECEIPT DE REPACK--><div id="openReceiptBoxesRepack" class="modalDialog">    <div>        <a href="#close" title="Close" class="closeB">X</a>        <div id="receipt_boxes">           <h1 class="title" style="font-family: 'VT323', serif; font-size:50px; padding-left:13px;">Warehouse Receipt # <font id="receiptBoxesRepack"></font></h1>            <div style="overflow:scroll; height:400px; vertical-align: top;">                <table id="boxes_Repacktable" name="boxes_table" class="table table-bordered" id="blueRow">                    <thead  bgcolor="#F2CEA9">                        <tr>                            <td>                               <b>Status</b>                            </td>                            <td>                               <b>Mode</b>                            </td>                            <td>                                <b>Length</b>                            </td>                            <td>                               <b>Width</b>                            </td>                            <td>                               <b>Height</b>                            </td>                                              <td>                               <b>Box Id</b>                            </td>                                                    </tr>                    </thead>				                       <tbody>                    </tbody>                </table>            </div>            				<table class="table table-bordered"> 					   <tr><td><b>Total Repack Price:</b>$ <div id="totalrepackprice"></div></td> 						    <td><b>Total Weight:</b>lb/kg <div id="totalweight"></div></td> 							<td><b>Weigth-Volume:</b>Dom/lb <div id="weightvolume"></div></td> 							<td><b>Total Volume:</b><div id="totalvolume"></div> CF</td> 						</tr> 				</table>            <!--            <a href="#close" id="btn_doneboxes" class="pure-button pure-button-primary">Close</a>            <a id="btn_saveboxesclassify2" href="#close" class="pure-button pure-button-primary" style="background:#E08566;">SAVE</a>            -->        </div>    </div></div>	        <!--MODAL PARA MOSTAR LABEL-->    <div id="openModalB" class="modalDialogB">        <div>          <a href="#close" title="Close" class="closeB">X</a>            <div id="receipt_edit">                            </div>        </div>    </div>    <!--MODAL PARA MOSTAR OPCIONES DE IMPRESION DE TABLA -->    <div id="openModalPrint" class="modalDialog">        <div>          <a href="#close" title="Close" class="closeB">X</a>            <div id="printcontent">                                <a id="btn_printletter" class="pure-button pure-button-primary">Print in letter</a>                <a id="btn_printsmall" class="pure-button pure-button-primary" style="background:#E08566;">Print in labels</a>            </div>        </div>    </div>			    </div>    <!-- LOAD FILES AT PAGE END FOR FASTER LOADING -->    <%include ../../generals/endFiles.ejs%><script>    /* GLOBAL USER */    var user;    $( document ).ready(function() {            console.log( "ready!" );            $("#filterdate").val("Today");        });            Parse.initialize("XEPryFHrd5Tztu45du5Z3kpqxDsweaP1Q0lt8JOb", "MDhb1hBngr2tx2v9TjyzoUhMcOFeWGJ56TWvChqi");                            /* OBTENCION Y ALMACENAMIENTO DEL CURRENT USER PARA USARSE CLIENTSIDE */            var query = new Parse.Query("User");                        query.descending('createdAt');            query.include("Company");                        query.get("<%= user.id%>", {                success:                     function(object)                    {                        /* SAVE USER FOR FUTURE OPERATIONS */                        user = object;                                                                        update_table();                                                /* FILL THE WAREHOUSES SELECT FILTER */                        var query = new Parse.Query("Cellars");                                                query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id} );                        query.descending('createdAt');                                                query.find({                            success:                                 function(results)                                {                                    for(i in results)                                    {                                                                                wareselect = document.getElementById("warehousefilter");                                        wareselect.options[wareselect.options.length] = new Option(results[i].get("Name"), results[i].id);                                                                                /* too fill the warehouses transfer list */                                        waretransfer = document.getElementById("waretransfer");                                        waretransfer.options[waretransfer.options.length] = new Option(results[i].get("Name"), results[i].id);                                                                            }                                                                    }                            });                                                                                            }                });            function update_table()    {        /*alert(JSON.stringify(user) );*/                    if($("#warehousefilter").val() == "All")            conditions = {containedIn:{"Status":["Received","NotProcessed"]},                            equalTo:{"Company":{__type: "Pointer", className: "Companies", objectId: user.get("Company").id}}};        else            conditions = {containedIn:{"Status":["Received","NotProcessed"]},                             equalTo:                            {                                "Warehouse":{__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()},                                "Company":{__type: "Pointer", className: "Companies", objectId: user.get("Company").id}                             }                        };                   InsertTable({                cols:   /*Columnas definidas FIELD:TITLE or FIELD:{FIELDNEEDED:FIELDTITLE}*/                     {                            "ReceiptNum":"",                            "Consignee":{"Name":"", "Country":"Country"}, /*This is the sintax for return fields of pointers showed on table*/                            "Shipper":{"Name":""}, /*This is the sintax for return fields of pointers showed on table*/                            "ReceiptDate":"",                            "Destination":"",                            "Warehouse":{Name:""},                            "TotalBoxes":"",                            "PackedBoxes":"",                            "Transport":"",			                "Shipment":"",			                "Weight":"",			                "Status":"",                            "objectId":"",                            "PackedBoxes":"",                            "Hour":""                    },                                    /* AL PASAR EL PARAMETRO COLLECTION INDICAMOS QUE NECESITAMOS BUSQUEDA CON LISTA DE RESULTADOS */                collection: "Receipts", /* COLLECCION PRINCIPAL */                                /* CONDICIONES */                conditions: filter_conditions_with_dict({                                            conditions:conditions                                            }),                                /*BUSQUEDA DE SEARCH TIPO LIKE*/                like: filter_like(),                                document: "Staff/Warehouses/labels_partitions/dynamictable",                itemid: "ware_table"            });            }        $("#btn_printletter").click(function(){                                var query = new Parse.Query("Receipts");                        query.include("Shipper");            query.include("Consignee");            query.include("Warehouse");                        /* WAREHOUSE FILTER */            if($("#warehousefilter").val() != "All")                query.equalTo("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()});                        /* COMPANY */            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                        /* SECTION CONDITIONS ... RECEIPT LIST IN THIS CASE */            query.containedIn("Status", ["Received","NotProcessed"]);                            /* FILTERBY */            if($("#filterby").val() != "All")            {                switch($("#filterby").val())                {                    case "Shipper":                                                break;                    case "Consignee":                                                break;                    case "ReceiptNum":                                                break;                    case "Destination":                                                break;                }            }                        /* FILTER DATE */            if($("#filterdate").val() != "All")            {                if($("#filterdate").val() == "DateRange")                {                    var begindate = new Date($("#fromdate").val() );                    var enddate = new Date($("#todate").val() );                                        query.greaterThanOrEqualTo('ReceiptDate', moment( begindate ).format("YYYYMMDD"));                    query.lessThanOrEqualTo('ReceiptDate', moment( enddate).format("YYYYMMDD"));                                    }                else                {                    clientDateConditions(query);                }            }                        query.find({success: function(results){                                var doc = new jsPDF('p', 'mm', [216, 279]);                                        doc.setFontSize(14);                                        /* COMPANY */                    doc.text(5, 5, user.get("Company").get("name") );                                        doc.setFontSize(8);                                        doc.text(5, 11, "Rcpt." );                    doc.text(15, 11, "Client" );                    doc.text(45, 11, "Shipper" );                    doc.text(75, 11, "Repacked" );                    doc.text(90, 11, "Boxes" );                    doc.text(100, 11, "Weight" );                    doc.text(110, 11, "Date" );                    doc.text(125, 11, "Destination" );                    doc.text(165, 11, "Warehouse" );                                                            var x = 0;                    var y = 20;                    var offset = 40;                    var yoffset = 7;                                            for(i in results)                    {                        /*alert( results[i].get("ReceiptNum") );*/                                                doc.text(5, y, results[i].get("ReceiptNum").toString() );                                                if(typeof(results[i].get("Consignee") ) != "undefined")                            doc.text(15, y, results[i].get("Consignee").get("Name") );                                                    if(typeof(results[i].get("Shipper") ) != "undefined")                            doc.text(45, y, results[i].get("Shipper").get("Name") );                                                    doc.text(75, y, results[i].get("PackedBoxes").toString() );                        doc.text(90, y, results[i].get("TotalBoxes").toString() );                        doc.text(100, y, results[i].get("Weight") );                        doc.text(110, y, results[i].get("ReceiptDate") );                        doc.text(125, y, results[i].get("Destination") );                                                if(typeof(results[i].get("Warehouse") ) != "undefined")                            doc.text(165, y, results[i].get("Warehouse").get("Name") );                                                y += yoffset;                                                if(y > 260)                        {                            y = 20;                            doc.addPage();                        }                    }                                        /* REAL PRINT */                    var blob = doc.output("blob");                                        win = window.open(URL.createObjectURL(blob));                    win.print();                                    }});        });        $("#btn_printsmall").click(function(){                  var query = new Parse.Query("Receipts");                        query.include("Shipper");            query.include("Consignee");            query.include("Warehouse");                        /* WAREHOUSE FILTER */            if($("#warehousefilter").val() != "All")                query.equalTo("Warehouse", {__type: "Pointer", className: "Cellars", objectId: $("#warehousefilter").val()});                        /* COMPANY */            query.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                        /* SECTION CONDITIONS ... RECEIPT LIST IN THIS CASE */            query.containedIn("Status", ["Received","NotProcessed"]);                            /* FILTERBY */            if($("#filterby").val() != "All")            {                switch($("#filterby").val())                {                    case "Shipper":                                                break;                    case "Consignee":                                                break;                    case "ReceiptNum":                                                break;                    case "Destination":                                                break;                }            }                        /* FILTER DATE */            if($("#filterdate").val() != "All")            {                if($("#filterdate").val() == "DateRange")                {                    var begindate = new Date($("#fromdate").val() );                    var enddate = new Date($("#todate").val() );                                        query.greaterThanOrEqualTo('ReceiptDate', moment( begindate ).format("YYYYMMDD"));                    query.lessThanOrEqualTo('ReceiptDate', moment( enddate).format("YYYYMMDD"));                                    }                else                {                    clientDateConditions(query);                }            }                        query.find({success: function(results){                                var doc = new jsPDF('l', 'mm', [152.4, 101.6]);                                        doc.setFontSize(14);                                        /* COMPANY */                    doc.text(5, 5, user.get("Company").get("name") );                                        doc.setFontSize(8);                                        doc.text(5, 11, "Rcpt." );                    doc.text(15, 11, "Client" );                    doc.text(45, 11, "Shipper" );                    doc.text(75, 11, "Repacked" );                    doc.text(90, 11, "Boxes" );                    doc.text(100, 11, "Weight" );                    doc.text(110, 11, "Date" );                    doc.text(125, 11, "Destination" );                    doc.text(165, 11, "Warehouse" );                                                            var x = 0;                    var y = 20;                    var offset = 40;                    var yoffset = 7;                                            for(i in results)                    {                        if(y > 150)                        {                            y = 8;                            doc.addPage();                        }                                                doc.text(5, y, results[i].get("ReceiptNum").toString() );                                                if(typeof(results[i].get("Consignee") ) != "undefined")                            doc.text(15, y, results[i].get("Consignee").get("Name") );                                                    if(typeof(results[i].get("Shipper") ) != "undefined")                            doc.text(45, y, results[i].get("Shipper").get("Name") );                                                    doc.text(75, y, results[i].get("PackedBoxes").toString() );                        doc.text(90, y, results[i].get("TotalBoxes").toString() );                        doc.text(100, y, results[i].get("Weight") );                        doc.text(110, y, results[i].get("ReceiptDate") );                        doc.text(125, y, results[i].get("Destination") );                                                if(typeof(results[i].get("Warehouse") ) != "undefined")                            doc.text(165, y, results[i].get("Warehouse").get("Name") );                                                y += yoffset;                                            }                                        /* REAL PRINT */                    var blob = doc.output("blob");                                        win = window.open(URL.createObjectURL(blob));                    win.print();                                    }});        });    $("#btn_saveboxesclassify").click(function(){                    var query = new Parse.Query("Boxes");            query.equalTo("Receipt", {__type:"Pointer", className:"Receipts", objectId:openedreceipt});                        query.find(function(results){                    for(i in results)                    {                        results[i].set("Shipment", $("#" + results[i].id).val());                        results[i].save();                    }                });                    });            $("#btn_saveboxesclassify2").click(function(){                    var query = new Parse.Query("Boxes");            query.equalTo("Receipt", {__type:"Pointer", className:"Receipts", objectId:openedreceipt});                        query.find(function(results){                    for(i in results)                    {                        results[i].set("Shipment", $("#" + results[i].id).val());                        results[i].save();                    }                });                    });    $("#btn_closeclassifydialog").click(            function(){                $("#classifyDiv").css("display", "");                $("#shipoptions").css("display", "none");                $(".checkship").css("display", "none");                $("#classifycolumn").css("display", "none");                $("#deleteDiv").css("display", "");                    });        $("#btn_save").click(    function()    {           alert("SAVE?");        return;    });    /* CODE FOR THE LABELFORM */    $("#ReceiptDate").datepicker();                                        </script>	    </div>        <!-- modal end -->    </body></html>
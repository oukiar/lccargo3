<%moment = require('cloud/moment')%><div id="ware_table">    <table class="table table-bordered" id="receiptsTable">		<style>		#not:nth-child(even) {background: white}		#not:nth-child(odd) {background: #FBFBFC}		</style>        <thead>        <tr>            <th>Rcpt.</th>            <th style="cursor:pointer;">Consignee <i id="orderby_consignee" class="fa fa-chevron-down" style="float:right;"></i></th>            <th style="cursor:pointer;">Shipper <i id="orderby_shipper" class="fa fa-chevron-down" style="float:right;"></i></th>			<th>Repacked</th>			<th>Boxes</th>            <th style="cursor:pointer;">Date <i id="orderby_date" class="fa fa-chevron-down" style="float:right;"></i></th>            <th style="cursor:pointer;">Destination <i id="orderby_destination" class="fa fa-chevron-down" style="float:right;"></i></th>            <th>Weight</th>            <th>WareHouse</th>            <th id="classifycolumn" style="display:none">Ship</th>            <th id="deletecolumn" style="display:none">Delete</th>        </tr>        </thead>        <tbody>    <% results.forEach(function(label){        if(label["Status"] == "Repack")        {        %>         <tr bgcolor="">        <%        }        else        {        %>		 <tr style="" id="not">        <%}%>			 <td>             <a class=" pop" data-container="body" data-toggle="popover" data-placement="right" data-content="            <a href='#openModalB' onclick=&quot;fillEditable('<%=label['objectId']%>')&quot;>Edit Receipt</a></br>            <!--<a onclick=&quot;printReceipt('<%= label["objectId"]%>')&quot;>Print Receipt</a></br> -->            <a onclick=&quot;window.open('/printreceipt/' + '<%= label["objectId"]%>','Microsoft')&quot;>Print Receipt</a></br>            <a onclick=&quot;printLabel('<%= label["objectId"]%>')&quot;>Print Labels</a></br>            <a href='#openEmail' onclick=&quot;openedEmail('<%=label['objectId']%>')&quot;>Email</a></br>            <a href='#openReceiptLog' onclick=&quot;showlogs('<%= label["objectId"]%>')&quot;>Receipt Log</a></br>"                        data-original-title="" title="" style="cursor:crosshair">            <div style="width:100%;"><b><%= label["ReceiptNum"]%></b></div>            </a>			</td>                       <td><%= label["Consignee"]%> </td>            <td><% if(typeof label["Shipper"] != "undefined"){%> <%=label["Shipper"]%><%}else{%>Repack<%}%></td>			              <td align="center"> <a onclick="showboxesWarehouse('<%=label['objectId']%>')" href='#openReceiptBoxes'><b><%=label['PackedBoxes']%></b></a></td>				  <td align="center"><a onclick="showboxes('<%=label['objectId']%>')" href='#openReceiptBoxes'><b><%=label['TotalBoxes']%></b></a></td>         		  		              <td><%= moment(label["ReceiptDate"], "YYYYMMDD").format("MM/DD/YYYY") %> <% if(typeof(label["Hour"]) != "undefined"){%><%=label["Hour"]%><%}%> </td>            <td><%if( label["Destination"] != null){%><%= label["Destination"]%><%}else{%><%= label["Country"]%><%}%></td>            <td><%= label["Weight"]%></td>		                <td><a onclick="opentransfer('<%=label['objectId']%>')" href="#openModalC"><b><%= label["Warehouse"]%></b></a></td>		            <td style="display:none" class="checkship"><input name="checkship" id="<%=JSON.stringify({objectId:label['objectId'], ReceiptNum:label['ReceiptNum']})%>" type="checkbox"></td>            <td style="display:none" class="checkdelete"><input name="checkdelete" id="<%=JSON.stringify({objectId:label['objectId'], Receipt:label['ReceiptNum']})%>" type="checkbox"></td>						 </tr>    <% }) %>           </tbody>    </table>        <img src="web/img/tsa-security-theater-300x300.jpg" id="img_sec" style="display:none;">    <div id="myqrcode"></div></div><script>    $("#orderby_consignee").click(function(){            orderby = "ConsigneeName";            update_table();        });    $("#orderby_shipper").click(function(){            orderby = "ShipperName";            update_table();        });            $("#orderby_date").click(function(){            orderby = "ReceiptDate";            update_table();        });            $("#orderby_destination").click(function(){            orderby = "Destination";            update_table();        });    var receiptEmail;        function openedEmail(objectId)    {        $("#otherEmail").val("");        $("#txt_message").val("");        receiptEmail = objectId;    }    function reactivatepopup()    {            $(".pop").popover({ trigger: "manual" , html: true, animation:false})            .on("mouseenter", function () {                var _this = this;                $(this).popover("show");                $(".popover").on("mouseleave", function () {                    $(_this).popover('hide');                });            }).on("mouseleave", function () {                var _this = this;                setTimeout(function () {                    if (!$(".popover:hover").length) {                        $(_this).popover("hide");                    }                }, 300);        });    }        window.setTimeout(reactivatepopup, 1000);        var unpacking = -1;        var logosec;            getBase64FromImageUrl("web/img/tsa-security-theater-300x300.jpg");        function getBase64FromImageUrl(url)     {        var img = new Image();        img.onload = function () {            var canvas = document.createElement("canvas");            canvas.width =this.width;            canvas.height =this.height;            var ctx = canvas.getContext("2d");            ctx.drawImage(this, 0, 0);            var dataURL = canvas.toDataURL("image/png");            logosec = "data:image/png;base64," + dataURL.replace(/^data:image\/(png|jpg);base64,/, "");        };        img.src = url;    }    function printReceipt(objectId)    {          alert(objectId);    }    function printLabel(objectId)    {                   doc = new jsPDF('l', 'pt', [432,288]);            var q = new Parse.Query("Receipts");                q.equalTo("objectId", objectId);                q.include("Company");        q.include("Shipper");        q.include("Consignee");        q.include("Usr");        q.first({success: function(receipt){                                var query = new Parse.Query("Boxes");                query.include("Receipt");                query.equalTo("Receipt", {__type:"Pointer", className:"Receipts", objectId:objectId});                                query.find({success:function(results) {                                                for(i=0; i<results.length; i++)                        {                            box = results[i];                                                        $("#myqrcode").qrcode({text: box.id, render:"canvas", size:100});                                                        w = document.getElementById("myqrcode");                            console.log(w);                                                        var qrcodedata = w.firstChild.toDataURL("image/png");                                                        w.removeChild(w.firstChild);                                                                                if(i > 0)                                doc.addPage();                                                            doc.setDrawColor(0);                            doc.setFillColor(255, 255, 255);                            doc.roundedRect(20, 20, 392, 248, 5, 5, 'FD');                                                     doc.setFontSize(18);                                                        /* COMPANY */                            doc.text(170, 50, receipt.get("Company").get("name") );                                                        /* RECEIPT INFORMATION */                            receiptInfo = "# " + receipt.get("ReceiptNum") + " - " + receipt.get("Destination");                            doc.text(170, 80, receiptInfo);                                                        doc.setFontSize(10);                                                        /* HEAD TABLE */                            headTable = 'Length   Width   Height   Volume  Weight-Vol  Weight';                            doc.text(160, 120, headTable);                                                        doc.setFontSize(8);                                                        /* BOX SIZE WEIGHT, ETC */                            if(typeof(box.get("Length")) != "undefined" && box.get("Length") != "" )                                doc.text(165, 135, parseFloat(box.get("Length")).toFixed(2) );                                                        if(typeof(box.get("Width")) != "undefined" && box.get("Width") != "" )                                doc.text(202, 135, parseFloat(box.get("Width")).toFixed(2) );                                                        if(typeof(box.get("Height")) != "undefined" && box.get("Height") != "" )                                doc.text(238, 135, parseFloat(box.get("Height")).toFixed(2) );                                                        if(typeof(receipt.get("Volume")) != "undefined" && receipt.get("Volume") != "" )                                doc.text(280, 135, parseFloat(receipt.get("Volume")).toFixed(2) );                                                        if(typeof(receipt.get("WeightVol")) != "undefined" && receipt.get("WeightVol") != "" )                                doc.text(320, 135, parseFloat(receipt.get("WeightVol")).toFixed(2) );                                                        if(typeof(box.get("Weight")) != "undefined" && box.get("Weight") != "" )                                doc.text(370, 135, parseFloat(box.get("Weight")).toFixed(2) );                                                        doc.setFontSize(10);                                                                                                                /* SHIPPER */                            doc.text(50, 160, "Shipper:");                            if(typeof(receipt.get("ShipperName"))!="undefined")                            {                                doc.text(50, 170, receipt.get("ShipperName"));                            }                            else                            {                                doc.text(50, 170, receipt.get("Shipper").get("Name"));                            }                                                        /* ZONE */                            doc.text(50, 190, "Zone:");                            doc.text(50, 200, receipt.get("Zone") );                                                                                    /* TIME */                            doc.text(50, 220, "Time:");                            doc.text(50, 230, moment( receipt.get("ReceiptHour") ).format("MM[/]DD[/]YYYY  h:mm:ss") );                                                        /* CONSIGNEE */                            doc.text(270, 160, "Consignee:");                            if(typeof(receipt.get("ConsigneeName"))!="undefined")                            {                                var splited = doc.splitTextToSize(receipt.get("ConsigneeName"), 120);                                doc.text(270, 170, splited );                            }                            else                            {                                var splited = doc.splitTextToSize(receipt.get("Consignee").get("Name"), 120);                                doc.text(270, 170, splited );                            }                                                                                    /* RECEIPT BY */                            doc.text(270, 190, "Receipt by:");                            if(typeof(receipt.get("Usr").get("Name")) != "undefined" )                                doc.text(270, 200, receipt.get("Usr").get("Name") );                                                            /* BOX NUMBER */                            doc.text(270, 220, "Box:");                            if(typeof box.get("Num") != "undefined")                                doc.text(270, 230, box.get("Num"));                                                                                    /* FOOTER MESSAGE */                            advert = "ALL CARGO IS SUBJECT TO INSPECTION";                            doc.text(calc_offset(doc, advert, 12), 260, advert);                                                                                                                                                             doc.addImage(qrcodedata, 'PNG', 30, 30, 100, 100);                                                                                                                /* LOGOTIPO DE SEGURIDAD */                            /*doc.addImage(logosec, 'PNG', 50, 235, 28, 28);*/                                                                                                                                                    if(i == results.length-1)                            {                                                                var blob = doc.output("blob");                                win = window.open(URL.createObjectURL(blob));                                win.print();                                                                /*                                if(navigator.userAgent.indexOf("AppleWebKit") > -1)                                {                                    doc.autoPrint();                                    doc.output('dataurlnewwindow');                                }                                else                                {                                    alert(navigator.userAgent);                                    var blob = doc.output("blob");                                    win = window.open(URL.createObjectURL(blob));                                    win.print();                                }*/                                                            }                                                }                                            }});            }});    }            function calc_offset(doc, text, textsize)    {        return doc.internal.pageSize.width/2 - (doc.getStringUnitWidth(text)/2)*textsize;    }    function initUnpack(objectId)    {        unpacking = objectId;    }    var wareEditing = -1;    function fillEditable(objectId)    {        /* ALMACENAR EL ID DEL LABEL QUE SE ESTA EDITANDO */        wareEditing = objectId;                    var query = new Parse.Query("Receipts");        query.descending('createdAt');        query.include("Company");        query.include("Shipper");        query.include("Consignee");                        query.get(objectId, {            success:                 function(object)                {                    if(object.get("Status") == "Repack")                    {                        /* SHOW REPACK FORM */                                                    $.post("/getrendered",                             {document: "Staff/Warehouses/repack_partitions/RepackForm"},                            function(result)                            {                                $("#receipt_edit").html(result);                                                                                                                                                /* FILL THE DESTINATIONS */                                var qdestinations = new Parse.Query("Destinations");                                qdestinations.equalTo("Client", {__type: "Pointer", className: "Clients", objectId: object.get("Consignee").id});                                qdestinations.descending('createdAt');                                                                qdestinations.find({success: function(results){                                        for(i in results)                                        {                                            select = document.getElementById("Country");                                            select.options[select.options.length] = new Option(results[i].get("Alias"), results[i].get("Alias"));                                        }                                    }});                                                                usrID = object.get("Consignee").id;                                currentWareHouse = object.get("Warehouse").get("Name");                                                                /* FILL THE REST OF THE FORM */                                $("#Consignee").val( object.get("Consignee").get("Name") );                                                                $("#Agent").val( object.get("Agent") );                                $("#Receipt").val( object.get("ReceiptNum") );                                $("#ReceiptDate").val( moment( object.get("ReceiptDate"), "YYYYMMDD" ).format("MM[/]DD[/]YYYY") );                                $("#Shipment").val( object.get("Shipment") );                                $("#Country").val( object.get("Destination") );                                $("#Pieces").val( object.get("TotalBoxes") );                                $("#ExtraCost").val( object.get("ExtraCost") );                                $("#Weight").val( object.get("Weight") );                                $("#WeightVol").val( object.get("WeightVol") );                                $("#Value").val( object.get("Value") );                                $("#Volume").val( object.get("Volume") );                                $("#Zone").val( object.get("Zone") );                                $("#Content").val( object.get("Content") );                                $("#GeneralNotes").val( object.get("GeneralNotes") );                                $("#InternalNotes").val( object.get("InternalNotes") );                                $("#TotalWeight").val( object.get("TotalWeight") );                                $("#TotalWeightKG").val( object.get("TotalWeightKG") );                                                                /* LLENAR BOXES */                                qboxes = new Parse.Query("Boxes");                                qboxes.equalTo("Receipt", {__type: "Pointer", className: "Receipts", objectId: object.id});                                                                qboxes.find({success: function(results){                                                                                var nrows = 1;                                        var boxesgrouped = groupBoxes(results);                                        for(var i=0; i<boxesgrouped.length; i++)                                        {                                            if(typeof $("#Length-"+nrows.toString() ).val() == "undefined" )                                            {                                                $( "#btn_addbox" ).trigger("click");                                            }                                                                                        $("#RPrice-"+nrows.toString() ).val(boxesgrouped[i].get("RPrice") );                                            $("#Boxes-"+nrows.toString() ).val(boxesgrouped[i].get("Boxes") );                                            $("#Length-"+nrows.toString() ).val(boxesgrouped[i].get("Length") );                                            $("#Width-"+nrows.toString() ).val(boxesgrouped[i].get("Width") );                                            $("#Height-"+nrows.toString() ).val(boxesgrouped[i].get("Height") );                                                                                        nrows += 1;                                                                                    }                                                                           }});                                                                                            }                        );                                         }                    else                    {                        /* GET THE CORRECT FORM FROM THE SERVER */                                             $.post("/getrendered",                             {document: "Staff/Warehouses/newlabel_partitions/LabelForm"},                            function(result)                            {                                $("#receipt_edit").html(result);                                                                /* DISABLE CONSIGNEE AND SHIPPER */                                $("#Consignee")[0].disabled = true;                                $("#Shipper")[0].disabled = true;                                                                /*$("#openstoreinfo")[0].disabled = true;*/                                $("#openstoreinfo").hide();                                /*#$("#openclientinfo")[0].disabled = true;*/                                $("#openclientinfo").hide();                                                                /* FILL THE WAREHOUSES */                                var qwarehouses = new Parse.Query("Cellars");                                qwarehouses.equalTo("Company", {__type: "Pointer", className: "Companies", objectId: user.get("Company").id});                                qwarehouses.descending('createdAt');                                                                qwarehouses.find({success: function(results){                                                                                for(i in results)                                        {                                            wareselect = document.getElementById("Warehouse");                                            wareselect.options[wareselect.options.length] = new Option(results[i].get("Name"), results[i].id);                                        }                                    }});                                                                    /* FILL THE DESTINATIONS */                                var qdestinations = new Parse.Query("Destinations");                                qdestinations.equalTo("Client", {__type: "Pointer", className: "Clients", objectId: object.get("Consignee").id});                                qdestinations.descending('createdAt');                                                                qdestinations.find({success: function(results){                                        for(i in results)                                        {                                            select = document.getElementById("Country");                                            select.options[select.options.length] = new Option(results[i].get("Alias"), results[i].get("Alias"));                                        }                                    }});                                                                /* IDs FOR CONSIGNEE AND SHIPPER */                                shipperID = object.get("Shipper").id;                                consigneeID = object.get("Consignee").id;                                                                                                /* FILL THE REST OF THE FORM */                                $("#Shipper").val( object.get("ShipperName") );                                $("#Consignee").val( object.get("Consignee").get("Name") );                                                                $("#Agent").val( object.get("Agent") );                                $("#Receipt").val( object.get("ReceiptNum") );                                $("#ReceiptDate").val( moment( object.get("ReceiptDate"), "YYYYMMDD" ).format("MM[/]DD[/]YYYY") );                                $("#Transport").val( object.get("Transport") );                                $("#Country").val( object.get("Destination") );                                $("#Boxes").val( object.get("TotalBoxes") );                                $("#ExtraCost").val( object.get("ExtraCost") );                                $("#Invoice").val( object.get("Invoice") );                                $("#Weight").val( object.get("Weight") );                                $("#WeightVol").val( object.get("WeightVol") );                                $("#Value").val( object.get("Value") );                                $("#Volume").val( object.get("Volume") );                                $("#Zone").val( object.get("Zone") );                                $("#Content").val( object.get("Content") );                                $("#GeneralNotes").val( object.get("GeneralNotes") );                                $("#InternalNotes").val( object.get("InternalNotes") );                                                                /* LLENAR BOXES */                                qboxes = new Parse.Query("Boxes");                                qboxes.equalTo("Receipt", {__type: "Pointer", className: "Receipts", objectId: object.id});                                                                qboxes.find({success: function(results){                                                                                var nrows = 1;                                        var boxesgrouped = groupBoxes(results);                                        for(var i=0; i<boxesgrouped.length; i++)                                        {                                            if(typeof $("#Length-"+nrows.toString() ).val() == "undefined" )                                            {                                                $( "#btn_addbox" ).trigger("click");                                            }                                                                                        $("#Weight-"+nrows.toString() ).val(boxesgrouped[i].get("Weight") );                                            $("#Boxes-"+nrows.toString() ).val(boxesgrouped[i].get("Boxes") );                                            $("#Length-"+nrows.toString() ).val(boxesgrouped[i].get("Length") );                                            $("#Width-"+nrows.toString() ).val(boxesgrouped[i].get("Width") );                                            $("#Height-"+nrows.toString() ).val(boxesgrouped[i].get("Height") );                                                                                        nrows += 1;                                                                                    }                                                                           }});                                                            }                        );                                             }                                    }            });                    }        function groupBoxes(boxes)    {        var res=[];                for(i in boxes)        {            res = has_broths(boxes[i], res);        }                return res;    }        function has_broths(box, res)    {        for(i in res)        {            if(box.get("Width")==res[i].get("Width") &&                 box.get("Height")==res[i].get("Height") &&                box.get("Length")==res[i].get("Length") &&                box.get("Weight")==res[i].get("Weight") )            {                return res;            }        }                res.push(box);        return res;    }              $("#DateSelect").change(function(){            update_table();        });    transferId = -1;    function opentransfer(objectId)    {        transferId = objectId;    }        classifyId = -1;    function wareclassify(objectId, Receipt)    {        classifyId = objectId;        classifyReceipt = Receipt;    }    function wareceipt(objectId)    {            $.post("/getby",                 {by:"objectId", value:objectId, classvar:"Receipts"},                 function(data){                                    wh = JSON.parse(data);                                        $("#qrcode").replaceWith("<div id='qrcode'></div>");                    new QRCode(document.getElementById("qrcode"), wh["objectId"] );                                        $("#Receipt").val(wh["ReceiptNum"]);                    $("#ReceiptDate").val(moment(wh["ReceiptDate"]).format("MM[/]DD[/]YYYY") );                    $("#Agent").val(wh["Agent"]);                    $("#Transport").val(wh["Transport"]);                    $("#Warehouse").val(wh["Warehouse"]);                    $("#Country").val(wh["Country"]);                    $("#Prices").val(wh["Prices"]);                    $("#Weight").val(wh["Weight"]);                    $("#WeightVol").val(wh["WeightVol"]);                    $("#Volume").val(wh["Volume"]);                    $("#ExtraCost").val(wh["ExtraCost"]);                    $("#Invoice").val(wh["Invoice"]);                    $("#Value").val(wh["Value"]);                    $("#Zone").val(wh["Zone"]);                    $("#Content").val(wh["Content"]);                    $("#GeneralNotes").val(wh["GeneralNotes"]);                    $("#InternalNotes").val(wh["InternalNotes"]);                                                            var nrows = 1;                    boxes = JSON.parse(wh["Boxes"]);                                        for(box in boxes)                    {                                                if(typeof $("#Length-"+nrows.toString() ).val() == "undefined" )                        {                            $( "#btn_addbox" ).trigger("click");                        }                                                $("#Length-"+nrows.toString() ).val(boxes[box]["length"]);                        $("#Width-"+nrows.toString() ).val(boxes[box]["width"]);                        $("#Height-"+nrows.toString() ).val(boxes[box]["height"]);                        $("#Weight-"+nrows.toString() ).val(boxes[box]["weight"]);                        $("#Boxes-"+nrows.toString() ).val(boxes[box]["boxes"]);                                                nrows += 1;                    }                                                                            });    }    $("#btn_classify").click(        function()        {            $("#classifycolumn").css("display", "block");			$("#classifyDiv").css("display", "none");            $("#shipoptions").css("display", "block");			$("#deleteDiv").css("display", "none");                        $(".checkship").css("display", "block");        });                    $("#btn_back").click(			function(){				$("#classifyDiv").css("display", "block");				$("#shipoptions").css("display", "none");				$(".checkship").css("display", "none");				$("#classifycolumn").css("display", "none");				$("#deleteDiv").css("display", "");							});		    $("#btn_delete").click(        function()        {            $("#deletecolumn").css("display", "block");			$("#deleteDiv").css("display", "none");            $("#deleteconfirmDiv").css("display", "block");            $("#classifyDiv").css("display", "none");            $(".checkdelete").css("display", "block");        });            $("#btn_deleteconfirm").click(function(){                        checkboxes = document.getElementsByName("checkdelete");                        $("#modalDeleteItems").replaceWith("<div id='modalDeleteItems'></div>");                                            var bdel = false;                        for(i in checkboxes)            {                if(checkboxes[i].checked)                {                                            wh = JSON.parse(checkboxes[i].id);                                    str = "<b>Receipt: " + wh["ReceiptNum"] + "<div id='delete-" + wh["objectId"] + "'></div></b><br>";                    $("#modalDeleteItems").append(str);                    bdel = true;                }            }                                    if(bdel == false)            {                alert("You must select almost one label");                return false;            }        });                    $("#btn_deletecancel").click(			function(){				$("#deleteDiv").css("display", "block");				$("#deleteconfirmDiv").css("display", "none");				$(".checkdelete").css("display", "none");				$("#deletecolumn").css("display", "none");				$("#classifyDiv").css("display", "");							});			    /* LLENADO DE TABLA DE LOGS */    function showlogs(objectId)    {        var q=new Parse.Query("Receipts");                q.get(objectId, {success: function(receipt){                table = "#boxes_table > tbody";                                        $("#logTable > tbody").html("");                                var logs = receipt.get("Log");                                for(i in logs)                {                    $("#logTable > tbody").append("<tr><td>" + logs[i] + "</td></tr>");                }            }});    }    /* ESTA FUNCION INICIALIZA LOS BOXES DEL RECEIPT AL QUE SE LE DIO CLICK QUE SERAN MOSTRADOS EN EL MODALBOX */    function showboxes(objectId)    {        openedreceipt = objectId;        var q=new Parse.Query("Receipts");        q.get(openedreceipt, {success: function(receipt){                if(receipt.get("Status") == "Repack")                {                    $("#totalrepackprice").html(receipt.get("Value") );                    $("#totalweight").html(receipt.get("Weight") );                    $("#weightvolume").html(receipt.get("WeightVol"));                    $("#totalvolume").html(receipt.get("Volume"));                                    $("#receiptBoxesRepack").html(receipt.get("ReceiptNum") );                }                else                    $("#receiptBoxes").html(receipt.get("ReceiptNum") );                        }});        var query = new Parse.Query("Boxes");                query.ascending('BoxNum');        query.include('Receipt');        query.include('PackedIn');        query.equalTo("Receipt", {__type: "Pointer", className: "Receipts", objectId: openedreceipt});                query.find({            success:                 function(results)                {                    var table = "";                                    if(results[0].get("Receipt").get("Status") == "Repack")                        table = "#boxes_Repacktable > tbody";                    else                        table = "#boxes_table > tbody";                                                $(table).html("");                                        results.forEach(function(box){                                                /* DEPENDIENDO DEL ESTADO DE LA CAJA */                        if(box.get("Status") == "Repacked")                        {                            row = "<tr bgcolor='#FFF5E7'><td>"+box.get("Status")+                                    " in Warehouse <a onclick=\"showboxes('"+box.get("PackedIn").id+                                    "')\" href='#openReceiptBoxesRepack'>#<b>"+ box.get("PackedIn").get("ReceiptNum") +                                    "</b></a></td><td>"+box.get("Length")+"</td><td>"+box.get("Width")+                                    "</td><td>"+box.get("Height")+"</td><td>"+box.get("Num")+"</td><td>"+                                    box.get("Weight")+"</td></tr>";                        }                        else if(box.get("Receipt").get("Status") == "Repack")                        {                            row =   							        "<tr><td>"+box.get("Status")+							        "</td><td>"+box.get("Shipment")+                                    "</td><td>"+box.get("Length")+                                    "</td><td>"+box.get("Width")+							        "</td><td>"+box.get("Height")+							        "</td><td>"+box.get("Num")+"</td></tr>";															                                                            }                           else    /* RECEIVED: THE NATURAL STATUS OF THE BOXES ON THE  RECEIPTS */                        {                            row = "<tr><td>"+box.get("Status")+"</td><td>"+box.get("Length")+                                    "</td><td>"+box.get("Width")+"</td><td>"+box.get("Height")+                                    "</td><td>"+box.get("Num")+"</td><td>"+box.get("Weight")+"</td></tr>";                        }                                                        /* SHIPMENT OF THIS BOX  ....   DISABLED                            if(box.get("Shipment") == "Aereal")                                row += "<td><select name='shiptype' id='"+box.id+"'><option>Pending</option><option selected>Aereal</option><option>Terrestral</option><option>Sea</option></select></td></tr>";                                                        else if(box.get("Shipment") == "Terrestral")                                row += "<td><select name='shiptype' id='"+box.id+"'><option>Pending</option><option>Aereal</option><option selected>Terrestral</option><option>Sea</option></select></td></tr>";                                                        else if(box.get("Shipment") == "Sea")                                row += "<td><select name='shiptype' id='"+box.id+"'><option>Pending</option><option>Aereal</option><option>Terrestral</option><option selected>Sea</option></select></td></tr>";                                                        else                                 row += "<td><select name='shiptype' id='"+box.id+"'><option>Pending</option><option>Aereal</option><option>Terrestral</option><option>Sea</option></select></td></tr>";                            */                                                $(table).append(row);                    });                }            });    }			            /* ESTA FUNCION INICIALIZA LOS BOXES DEL RECEIPT AL QUE SE LE DIO CLICK QUE SERAN MOSTRADOS EN EL MODALBOX */    function showboxesWarehouse(objectId)    {        openedreceipt = objectId;                        var q=new Parse.Query("Receipts");        q.get(openedreceipt, {success: function(receipt){                if(receipt.get("Status") == "Repack")                    $("#receiptBoxesRepack").html(receipt.get("ReceiptNum") );                else                    $("#receiptBoxes").html(receipt.get("ReceiptNum") );                        }});        var query = new Parse.Query("Boxes");                query.ascending('BoxNum');        query.include('Receipt');        query.include('PackedIn');        query.equalTo("Receipt", {__type: "Pointer", className: "Receipts", objectId: openedreceipt});                query.find({            success:                 function(results)                {                                                $("#boxes_table > tbody").html("");                                        results.forEach(function(box){                                                                        /* DEPENDIENDO DEL ESTADO DE LA CAJA */                        if(box.get("Status") == "Repacked")                        {                            row = "<tr bgcolor='#FFF5E7'><td>"+box.get("Status")+                                    " in Warehouse <a onclick=\"showboxes('"+box.get("PackedIn").id+                                    "')\" href='#openReceiptBoxesRepack'>#<b>"+ box.get("PackedIn").get("ReceiptNum") +                                    "</b></a></td><td>"+box.get("Length")+"</td><td>"+box.get("Width")+                                    "</td><td>"+box.get("Height")+"</td><td>"+box.get("Num")+"</td><td>"+                                    box.get("Weight")+"</td></tr>";                                                                $("#boxes_table > tbody").append(row);                        }                                            });                }            });    }			        	 </script>